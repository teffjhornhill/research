                            t && i.setAttribute(t, ""), i.setAttribute("x-arrow", ""), i.className = "popper__arrow", e.appendChild(i);
                        }
                    }
                },
                beforeDestroy: function() {
                    this.doDestroy(true), this.popperElm && this.popperElm.parentNode === document.body && (this.popperElm.removeEventListener("click", l), document.body.removeChild(this.popperElm));
                },
                deactivated: function() {
                    this.$options.beforeDestroy[0].call(this);
                }
            };
        },
        e9c4: function(e, t, n) {
            var i = n("23e7"),
                o = n("da84"),
                r = n("d066"),
                s = n("2ba4"),
                a = n("e330"),
                l = n("d039"),
                c = o.Array,
                u = r("JSON", "stringify"),
                d = a(/./.exec),
                h = a("".charAt),
                f = a("".charCodeAt),
                p = a("".replace),
                m = a(1..toString),
                g = /[\uD800-\uDFFF]/g,
                v = /^[\uD800-\uDBFF]$/,
                b = /^[\uDC00-\uDFFF]$/,
                y = function(e, t, n) {
                    var i = h(n, t - 1),
                        o = h(n, t + 1);
                    return d(v, e) && !d(b, o) || d(b, e) && !d(v, i) ? "\\u" + m(f(e, 0), 16) : e;
                },
                w = l(function() {
                    return '"\\udf06\\ud834"' !== u("��") || '"\\udead"' !== u("�");
                });
            u && i({
                target: "JSON",
                stat: true,
                forced: w
            }, {
                stringify: function(e, t, n) {
                    for (var i = 0, o = arguments.length, r = c(o); i < o; i++) r[i] = arguments[i];
                    var a = s(u, null, r);
                    return "string" == typeof a ? p(a, g, y) : a;
                }
            });
        },
        ea34: function(e, t) {
            e.exports = function(e, t) {
                return {
                    value: t,
                    done: !!e
                };
            };
        },
        eac5: function(e, t, n) {
            var i = n("861d"),
                o = Math.floor;
            e.exports = Number.isInteger || function(e) {
                return !i(e) && isFinite(e) && o(e) === e;
            };
        },
        eb5e: function(e, t, n) {},
        ebb5: function(e, t, n) {
            "use strict";
            var i, o, r, s = n("a981"),
                a = n("83ab"),
                l = n("da84"),
                c = n("1626"),
                u = n("861d"),
                d = n("1a2d"),
                h = n("f5df"),
                f = n("0d51"),
                p = n("9112"),
                m = n("6eeb"),
                g = n("9bf2").f,
                v = n("3a9b"),
                b = n("e163"),
                y = n("d2bb"),
                w = n("b622"),
                x = n("90e3"),
                _ = l.Int8Array,
                C = _ && _.prototype,
                k = l.Uint8ClampedArray,
                S = k && k.prototype,
                O = _ && b(_),
                E = C && b(C),
                $ = Object.prototype,
                M = l.TypeError,
                T = w("toStringTag"),
                L = x("TYPED_ARRAY_TAG"),
                A = x("TYPED_ARRAY_CONSTRUCTOR"),
                D = s && !!y && "Opera" !== h(l.opera),
                F = false,
                R = {
                    Int8Array: 1,
                    Uint8Array: 1,
                    Uint8ClampedArray: 1,
                    Int16Array: 2,
                    Uint16Array: 2,
                    Int32Array: 4,
                    Uint32Array: 4,
                    Float32Array: 4,
                    Float64Array: 8
                },
                j = {
                    BigInt64Array: 8,
                    BigUint64Array: 8
                },
                P = function(e) {
                    if (!u(e)) return false;
                    var t = h(e);
                    return "DataView" === t || d(R, t) || d(j, t);
                },
                I = function(e) {
                    if (!u(e)) return false;
                    var t = h(e);
                    return d(R, t) || d(j, t);
                },
                N = function(e) {
                    if (I(e)) return e;
                    throw M("Target is not a typed array");
                },
                q = function(e) {
                    if (c(e) && (!y || v(O, e))) return e;
                    throw M(f(e) + " is not a typed array constructor");
                },
                B = function(e, t, n) {
                    if (a) {
                        if (n)
                            for (var i in R) {
                                var o = l[i];
                                if (o && d(o.prototype, e)) try {
                                    delete o.prototype[e];
                                } catch (r) {}
                            }
                        E[e] && !n || m(E, e, n ? t : D && C[e] || t);
                    }
                },
                W = function(e, t, n) {
                    var i, o;
                    if (a) {
                        if (y) {
                            if (n)
                                for (i in R)
                                    if (o = l[i], o && d(o, e)) try {
                                        delete o[e];
                                    } catch (r) {}
                            if (O[e] && !n) return;
                            try {
                                return m(O, e, n ? t : D && O[e] || t);
                            } catch (r) {}
                        }
                        for (i in R) o = l[i], !o || o[e] && !n || m(o, e, t);
                    }
                };
            for (i in R) o = l[i], r = o && o.prototype, r ? p(r, A, o) : D = false;
            for (i in j) o = l[i], r = o && o.prototype, r && p(r, A, o);
            if ((!D || !c(O) || O === Function.prototype) && (O = function() {
                    throw M("Incorrect invocation");
                }, D))
                for (i in R) l[i] && y(l[i], O);
            if ((!D || !E || E === $) && (E = O.prototype, D))
                for (i in R) l[i] && y(l[i].prototype, E);
            if (D && b(S) !== E && y(S, E), a && !d(E, T))
                for (i in F = true, g(E, T, {
                        get: function() {
                            return u(this) ? this[L] : undefined;
                        }
                    }), R) l[i] && p(l[i], L, i);
            e.exports = {
                NATIVE_ARRAY_BUFFER_VIEWS: D,
                TYPED_ARRAY_CONSTRUCTOR: A,
                TYPED_ARRAY_TAG: F && L,
                aTypedArray: N,
                aTypedArrayConstructor: q,
                exportTypedArrayMethod: B,
                exportTypedArrayStaticMethod: W,
                isView: P,
                isTypedArray: I,
                TypedArray: O,
                TypedArrayPrototype: E
            };
        },
        ecaa: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("form-item-wrapper", {
                        attrs: {
                            designer: e.designer,
                            field: e.field,
                            rules: e.rules,
                            "design-state": e.designState,
                            "parent-widget": e.parentWidget,
                            "parent-list": e.parentList,
                            "index-of-parent-list": e.indexOfParentList,
                            "sub-form-row-index": e.subFormRowIndex,
                            "sub-form-col-index": e.subFormColIndex,
                            "sub-form-row-id": e.subFormRowId
                        }
                    }, [n("el-switch", {
                        ref: "fieldEditor",
                        attrs: {
                            disabled: e.field.options.disabled,
                            "active-text": e.field.options.activeText,
                            "inactive-text": e.field.options.inactiveText,
                            "active-color": e.field.options.activeColor,
                            "inactive-color": e.field.options.inactiveColor,
                            width: e.field.options.switchWidth
                        },
                        on: {
                            change: e.handleChangeEvent
                        },
                        model: {
                            value: e.fieldModel,
                            callback: function(t) {
                                e.fieldModel = t;
                            },
                            expression: "fieldModel"
                        }
                    })], 1);
                },
                o = [],
                r = (n("a9e3"), n("9eeb")),
                s = n("c6e3"),
                a = n("79fa"),
                l = n("2d11"),
                c = {
                    name: "switch-widget",
                    componentName: "FieldWidget",
                    mixins: [s.a, l.a, a.b],
                    props: {
                        field: Object,
                        parentWidget: Object,
                        parentList: Array,
                        indexOfParentList: Number,
                        designer: Object,
                        designState: {
                            type: Boolean,
                            default: false
                        },
                        subFormRowIndex: {
                            type: Number,
                            default: -1
                        },
                        subFormColIndex: {
                            type: Number,
                            default: -1
                        },
                        subFormRowId: {
                            type: String,
                            default: ""
                        }
                    },
                    components: {
                        FormItemWrapper: r.default
                    },
                    inject: ["refList", "formConfig", "globalOptionData", "globalModel"],
                    data: function() {
                        return {
                            oldFieldValue: null,
                            fieldModel: null,
                            rules: []
                        };
                    },
                    computed: {},
                    beforeCreate: function() {},
                    created: function() {
                        this.initFieldModel(), this.registerToRefList(), this.initEventHandler(), this.buildFieldRules(), this.handleOnCreated();
                    },
                    mounted: function() {
                        this.handleOnMounted();
                    },
                    beforeDestroy: function() {
                        this.unregisterFromRefList();
                    },
                    methods: {}
                },
                u = c,
                d = (n("7b2c"), n("2877")),
                h = Object(d.a)(u, i, o, false, null, "88bb0ad8", null);
            t.default = h.exports;
        },
        ecf2: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = n("e017"),
                o = n.n(i),
                r = n("21a1"),
                s = n.n(r),
                a = new o.a({
                    id: "icon-slot-field",
                    use: "icon-slot-field-usage",
                    viewBox: "0 0 1024 1024",
                    content: '<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="icon-slot-field"><defs><style type="text/css"></style></defs><path d="M475.937391 244.869565m18.031305 0l36.285217 0q18.031304 0 18.031304 18.031305l0 217.266087q0 18.031304-18.031304 18.031304l-36.285217 0q-18.031304 0-18.031305-18.031304l0-217.266087q0-18.031304 18.031305-18.031305Z" p-id="2852" /><path d="M305.41913 525.801739m18.031305 0l36.285217 0q18.031304 0 18.031305 18.031304l0 217.266087q0 18.031304-18.031305 18.031305l-36.285217 0q-18.031304 0-18.031305-18.031305l0-217.266087q0-18.031304 18.031305-18.031304Z" p-id="2853" /><path d="M646.233043 525.801739m18.031305 0l36.285217 0q18.031304 0 18.031305 18.031304l0 217.266087q0 18.031304-18.031305 18.031305l-36.285217 0q-18.031304 0-18.031305-18.031305l0-217.266087q0-18.031304 18.031305-18.031304Z" p-id="2854" /><path d="M827.436522 122.212174H196.563478a74.573913 74.573913 0 0 0-74.351304 74.351304v630.873044a74.573913 74.573913 0 0 0 74.351304 74.351304h630.873044a74.573913 74.573913 0 0 0 74.351304-74.351304V196.563478a74.573913 74.573913 0 0 0-74.351304-74.351304z m52.090435 705.224348a52.090435 52.090435 0 0 1-52.090435 52.090435H196.563478a52.090435 52.090435 0 0 1-52.090435-52.090435V196.563478a52.090435 52.090435 0 0 1 52.090435-52.090435h630.873044a52.090435 52.090435 0 0 1 52.090435 52.090435z" p-id="2855" /></symbol>'
                });
            s.a.add(a);
            t.default = a;
        },
        eedf: function(e, t, n) {
            var i = n("7037").default;
            n("a4d3"), n("e01a"), n("d3b7"), n("944a"), n("0c47"), n("23dc"), n("99af"), n("b0c0"), e.exports = function(e) {
                var t = {};

                function n(i) {
                    if (t[i]) return t[i].exports;
                    var o = t[i] = {
                        i: i,
                        l: false,
                        exports: {}
                    };
                    return e[i].call(o.exports, o, o.exports, n), o.l = true, o.exports;
                }
                return n.m = e, n.c = t, n.d = function(e, t, i) {
                    n.o(e, t) || Object.defineProperty(e, t, {
                        enumerable: true,
                        get: i
                    });
                }, n.r = function(e) {
                    "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                        value: "Module"
                    }), Object.defineProperty(e, "__esModule", {
                        value: true
                    });
                }, n.t = function(e, t) {
                    if (1 & t && (e = n(e)), 8 & t) return e;
                    if (4 & t && "object" === i(e) && e && e.__esModule) return e;
                    var o = Object.create(null);
                    if (n.r(o), Object.defineProperty(o, "default", {
                            enumerable: true,
                            value: e
                        }), 2 & t && "string" != typeof e)
                        for (var r in e) n.d(o, r, function(t) {
                            return e[t];
                        }.bind(null, r));
                    return o;
                }, n.n = function(e) {
                    var t = e && e.__esModule ? function() {
                        return e.default;
                    } : function() {
                        return e;
                    };
                    return n.d(t, "a", t), t;
                }, n.o = function(e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t);
                }, n.p = "/dist/", n(n.s = 86);
            }({
                0: function(e, t, n) {
                    "use strict";

                    function i(e, t, n, i, o, r, s, a) {
                        var l, c = "function" === typeof e ? e.options : e;
                        if (t && (c.render = t, c.staticRenderFns = n, c._compiled = true), i && (c.functional = true), r && (c._scopeId = "data-v-" + r), s ? (l = function(e) {
                                e = e || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, e || "undefined" === typeof __VUE_SSR_CONTEXT__ || (e = __VUE_SSR_CONTEXT__), o && o.call(this, e), e && e._registeredComponents && e._registeredComponents.add(s);
                            }, c._ssrRegister = l) : o && (l = a ? function() {
                                o.call(this, this.$root.$options.shadowRoot);
                            } : o), l)
                            if (c.functional) {
                                c._injectStyles = l;
                                var u = c.render;
                                c.render = function(e, t) {
                                    return l.call(t), u(e, t);
                                };
                            } else {
                                var d = c.beforeCreate;
                                c.beforeCreate = d ? [].concat(d, l) : [l];
                            }
                        return {
                            exports: e,
                            options: c
                        };
                    }
                    n.d(t, "a", function() {
                        return i;
                    });
                },
                86: function(e, t, n) {
                    "use strict";
                    n.r(t);
                    var i = function() {
                            var e = this,
                                t = e.$createElement,
                                n = e._self._c || t;
                            return n("button", {
                                staticClass: "el-button",
                                class: [e.type ? "el-button--" + e.type : "", e.buttonSize ? "el-button--" + e.buttonSize : "", {
                                    "is-disabled": e.buttonDisabled,
                                    "is-loading": e.loading,
                                    "is-plain": e.plain,
                                    "is-round": e.round,
                                    "is-circle": e.circle
                                }],
                                attrs: {
                                    disabled: e.buttonDisabled || e.loading,
                                    autofocus: e.autofocus,
                                    type: e.nativeType
                                },
                                on: {
                                    click: e.handleClick
                                }
                            }, [e.loading ? n("i", {
                                staticClass: "el-icon-loading"
                            }) : e._e(), e.icon && !e.loading ? n("i", {
                                class: e.icon
                            }) : e._e(), e.$slots.default ? n("span", [e._t("default")], 2) : e._e()]);
                        },
                        o = [];
                    i._withStripped = true;
                    var r = {
                            name: "ElButton",
                            inject: {
                                elForm: {
                                    default: ""
                                },
                                elFormItem: {
                                    default: ""
                                }
                            },
                            props: {
                                type: {
                                    type: String,
                                    default: "default"
                                },
                                size: String,
                                icon: {
                                    type: String,
                                    default: ""
                                },
                                nativeType: {
                                    type: String,
                                    default: "button"
                                },
                                loading: Boolean,
                                disabled: Boolean,
                                plain: Boolean,
                                autofocus: Boolean,
                                round: Boolean,
                                circle: Boolean
                            },
                            computed: {
                                _elFormItemSize: function() {
                                    return (this.elFormItem || {}).elFormItemSize;
                                },
                                buttonSize: function() {
                                    return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
                                },
                                buttonDisabled: function() {
                                    return this.disabled || (this.elForm || {}).disabled;
                                }
                            },
                            methods: {
                                handleClick: function(e) {
                                    this.$emit("click", e);
                                }
                            }
                        },
                        s = r,
                        a = n(0),
                        l = Object(a.a)(s, i, o, false, null, null, null);
                    l.options.__file = "packages/button/src/button.vue";
                    var c = l.exports;
                    c.install = function(e) {
                        e.component(c.name, c);
                    };
                    t.default = c;
                }
            });
        },
        ef08: function(e, t) {
            var n = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
            "number" == typeof __g && (__g = n);
        },
        efdc: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("container-item-wrapper", {
                        attrs: {
                            widget: e.widget
                        }
                    }, [n("div", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: !e.widget.options.hidden,
                            expression: "!widget.options.hidden"
                        }],
                        key: e.widget.id,
                        staticClass: "sub-form-container"
                    }, [n("el-row", {
                        staticClass: "header-row"
                    }, [n("div", {
                        staticClass: "action-header-column"
                    }, [n("span", {
                        staticClass: "action-label"
                    }, [e._v(e._s(e.i18nt("render.hint.subFormAction")))]), n("el-button", {
                        staticClass: "action-button",
                        attrs: {
                            disabled: e.actionDisabled,
                            round: "",
                            type: "primary",
                            size: "mini",
                            title: e.i18nt("render.hint.subFormAddActionHint")
                        },
                        on: {
                            click: e.addSubFormRow
                        }
                    }, [e._v(" " + e._s(e.i18nt("render.hint.subFormAddAction"))), n("i", {
                        staticClass: "el-icon-plus el-icon-right"
                    })])], 1), e._l(e.widget.widgetList, function(t) {
                        return [n("div", {
                            key: t.id + "thc",
                            staticClass: "field-header-column",
                            class: [e.getLabelAlign(e.widget, t), t.options.required ? "is-required" : ""],
                            style: {
                                width: t.options.columnWidth
                            }
                        }, [t.options.labelIconClass ? n("span", {
                            staticClass: "custom-label"
                        }, ["front" === t.options.labelIconPosition ? [t.options.labelTooltip ? [n("el-tooltip", {
                            attrs: {
                                content: t.options.labelTooltip,
                                effect: "light"
                            }
                        }, [n("i", {
                            class: t.options.labelIconClass
                        })]), e._v(e._s(t.options.label))] : [n("i", {
                            class: t.options.labelIconClass
                        }), e._v(e._s(t.options.label))]] : "rear" === t.options.labelIconPosition ? [t.options.labelTooltip ? [e._v(" " + e._s(t.options.label)), n("el-tooltip", {
                            attrs: {
                                content: t.options.labelTooltip,
                                effect: "light"
                            }
                        }, [n("i", {
                            class: t.options.labelIconClass
                        })])] : [e._v(" " + e._s(t.options.label)), n("i", {
                            class: t.options.labelIconClass
                        })]] : e._e()], 2) : [n("span", {
                            attrs: {
                                title: t.options.labelTooltip
                            }
                        }, [e._v(e._s(t.options.label))])]], 2)];
                    })], 2), e._l(e.rowIdData, function(t, i) {
                        return n("el-row", {
                            key: t,
                            staticClass: "sub-form-row"
                        }, [n("div", {
                            staticClass: "sub-form-action-column hide-label"
                        }, [n("div", {
                            staticClass: "action-button-column"
                        }, [n("el-button", {
                            attrs: {
                                disabled: e.actionDisabled,
                                circle: "",
                                type: "",
                                icon: "el-icon-circle-plus-outline",
                                title: e.i18nt("render.hint.insertSubFormRow")
                            },
                            on: {
                                click: function(t) {
                                    return e.insertSubFormRow(i);
                                }
                            }
                        }), n("el-button", {
                            attrs: {
                                disabled: e.actionDisabled,
                                circle: "",
                                type: "",
                                icon: "el-icon-delete",
                                title: e.i18nt("render.hint.deleteSubFormRow")
                            },
                            on: {
                                click: function(t) {
                                    return e.deleteSubFormRow(i);
                                }
                            }
                        }), e.widget.options.showRowNumber ? n("span", {
                            staticClass: "row-number-span"
                        }, [e._v("#" + e._s(i + 1))]) : e._e()], 1)]), e._l(e.widget.widgetList, function(o, r) {
                            return [n("div", {
                                key: o.id + "tc" + t,
                                staticClass: "sub-form-table-column hide-label",
                                style: {
                                    width: o.options.columnWidth
                                }
                            }, [n(o.type + "-widget", {
                                key: e.fieldSchemaData[i][r].id,
                                tag: "component",
                                attrs: {
                                    field: e.fieldSchemaData[i][r],
                                    "parent-list": e.widget.widgetList,
                                    "index-of-parent-list": r,
                                    "parent-widget": e.widget,
                                    "sub-form-row-id": t,
                                    "sub-form-row-index": i,
                                    "sub-form-col-index": r
                                }
                            })], 1)];
                        })], 2);
                    })], 2)]);
                },
                o = [],
                r = n("5530"),
                s = (n("b0c0"), n("a434"), n("d3b7"), n("159b"), n("c6e3")),
                a = n("79fa"),
                l = n("ca00"),
                c = n("d67f"),
                u = n("90c2"),
                d = n("34f0"),
                h = n("c029"),
                f = {
                    name: "sub-form-item",
                    componentName: "ContainerItem",
                    mixins: [s.a, a.b, c.a, d.a],
                    components: Object(r.a)({
                        ContainerItemWrapper: u.default
                    }, h.a),
                    props: {
                        widget: Object
                    },
                    inject: ["refList", "sfRefList", "globalModel"],
                    data: function() {
                        return {
                            rowIdData: [],
                            fieldSchemaData: [],
                            actionDisabled: false
                        };
                    },
                    created: function() {
                        this.initRefList(), this.registerSubFormToRefList(), this.initRowIdData(true), this.initFieldSchemaData(), this.initEventHandler();
                    },
                    mounted: function() {
                        this.handleSubFormFirstRowAdd();
                    },
                    beforeDestroy: function() {
                        this.unregisterFromRefList();
                    },
                    methods: {
                        getLabelAlign: function(e, t) {
                            return t.options.labelAlign || e.options.labelAlign;
                        },
                        registerSubFormToRefList: function() {
                            "sub-form" === this.widget.type && (this.sfRefList[this.widget.options.name] = this);
                        },
                        initRowIdData: function(e) {
                            var t = this;
                            if ("sub-form" === this.widget.type) {
                                this.rowIdData.splice(0, this.rowIdData.length);
                                var n = this.formModel[this.widget.options.name];
                                n && n.length > 0 && (n.forEach(function() {
                                    t.rowIdData.push("id" + Object(l.f)());
                                }), e && setTimeout(function() {
                                    t.handleSubFormRowChange(n);
                                }, 800));
                            }
                        },
                        addToRowIdData: function() {
                            this.rowIdData.push("id" + Object(l.f)());
                        },
                        insertToRowIdData: function(e) {
                            this.rowIdData.splice(e, 0, "id" + Object(l.f)());
                        },
                        deleteFromRowIdData: function(e) {
                            this.rowIdData.splice(e, 1);
                        },
                        getRowIdData: function() {
                            return this.rowIdData;
                        },
                        getWidgetRefOfSubForm: function(e, t) {
                            var n = e + "@row" + this.rowIdData[t];
                            return this.getWidgetRef(n);
                        },
                        initFieldSchemaData: function() {
                            var e = this;
                            if ("sub-form" === this.widget.type) {
                                var t = this.rowIdData.length;
                                if (this.fieldSchemaData.splice(0, this.fieldSchemaData.length), t > 0)
                                    for (var n = function(t) {
                                            var n = [];
                                            e.widget.widgetList.forEach(function(t) {
                                                n.push(e.cloneFieldSchema(t));
                                            }), e.fieldSchemaData.push(n);
                                        }, i = 0; i < t; i++) n(i);
                            }
                        },
                        addToFieldSchemaData: function(e) {
                            var t = this,
                                n = [];
                            this.widget.widgetList.forEach(function(e) {
                                n.push(t.cloneFieldSchema(e));
                            }), undefined === e ? this.fieldSchemaData.push(n) : this.fieldSchemaData.splice(e, 0, n);
                        },
                        deleteFromFieldSchemaData: function(e) {
                            this.fieldSchemaData.splice(e, 1);
                        },
                        cloneFieldSchema: function(e) {
                            var t = Object(l.d)(e);
                            return t.id = e.type + Object(l.f)(), t;
                        },
                        initEventHandler: function() {
                            var e = this;
                            "sub-form" === this.widget.type && this.$on("setFormData", function(t) {
                                e.initRowIdData(false), e.initFieldSchemaData();
                                var n = t[e.widget.options.name] || [];
                                setTimeout(function() {
                                    e.handleSubFormRowChange(n);
                                }, 800);
                            });
                        },
                        handleSubFormFirstRowAdd: function() {
                            if ("sub-form" === this.widget.type && this.widget.options.showBlankRow && 1 === this.rowIdData.length) {
                                var e = this.formModel[this.widget.options.name] || [];
                                this.handleSubFormRowAdd(e, this.rowIdData[0]), this.handleSubFormRowChange(e);
                            }
                        },
                        addSubFormRow: function() {
                            var e = {};
                            this.widget.widgetList.forEach(function(t) {
                                t.formItemFlag && (e[t.options.name] = t.options.defaultValue);
                            });
                            var t = this.formModel[this.widget.options.name] || [];
                            t.push(e), this.addToRowIdData(), this.addToFieldSchemaData(), this.handleSubFormRowAdd(t, this.rowIdData[t.length - 1]), this.handleSubFormRowChange(t);
                        },
                        insertSubFormRow: function(e) {
                            var t = {};
                            this.widget.widgetList.forEach(function(e) {
                                e.formItemFlag && (t[e.options.name] = e.options.defaultValue);
                            });
                            var n = this.formModel[this.widget.options.name] || [];
                            n.splice(e, 0, t), this.insertToRowIdData(e), this.addToFieldSchemaData(e), this.handleSubFormRowInsert(n, this.rowIdData[e]), this.handleSubFormRowChange(n);
                        },
                        deleteSubFormRow: function(e) {
                            var t = this;
                            this.$confirm(this.i18nt("render.hint.deleteSubFormRow") + "?", this.i18nt("render.hint.prompt"), {
                                confirmButtonText: this.i18nt("render.hint.confirm"),
                                cancelButtonText: this.i18nt("render.hint.cancel")
                            }).then(function() {
                                var n = t.formModel[t.widget.options.name] || [],
                                    i = Object(l.d)(n[e]);
                                n.splice(e, 1), t.deleteFromRowIdData(e), t.deleteFromFieldSchemaData(e), t.handleSubFormRowDelete(n, i), t.handleSubFormRowChange(n);
                            }).catch(function() {});
                        },
                        handleSubFormRowChange: function(e) {
                            if (this.widget.options.onSubFormRowChange) {
                                var t = new Function("subFormData", this.widget.options.onSubFormRowChange);
                                t.call(this, e);
                            }
                        },
                        handleSubFormRowAdd: function(e, t) {
                            if (this.widget.options.onSubFormRowAdd) {
                                var n = new Function("subFormData", "newRowId", this.widget.options.onSubFormRowAdd);
                                n.call(this, e, t);
                            }
                        },
                        handleSubFormRowInsert: function(e, t) {
                            if (this.widget.options.onSubFormRowInsert) {
                                var n = new Function("subFormData", "newRowId", this.widget.options.onSubFormRowInsert);
                                n.call(this, e, t);
                            }
                        },
                        handleSubFormRowDelete: function(e, t) {
                            if (this.widget.options.onSubFormRowDelete) {
                                var n = new Function("subFormData", "deletedDataRow", this.widget.options.onSubFormRowDelete);
                                n.call(this, e, t);
                            }
                        }
                    }
                },
                p = f,
                m = (n("d459"), n("2877")),
                g = Object(m.a)(p, i, o, false, null, "7dbaba43", null);
            t.default = g.exports;
        },
        effc: function(e, t, n) {
            "use strict";
            n("3559");
        },
        f069: function(e, t, n) {
            "use strict";
            var i = n("59ed"),
                o = function(e) {
                    var t, n;
                    this.promise = new e(function(e, i) {
                        if (undefined !== t || undefined !== n) throw TypeError("Bad Promise constructor");
                        t = e, n = i;
                    }), this.resolve = i(t), this.reject = i(n);
                };
            e.exports.f = function(e) {
                return new o(e);
            };
        },
        f0c7: function(e, t, n) {},
        f0d9: function(e, t, n) {
            "use strict";
            t.__esModule = true, t.default = {
                el: {
                    colorpicker: {
                        confirm: "确定",
                        clear: "清空"
                    },
                    datepicker: {
                        now: "此刻",
                        today: "今天",
                        cancel: "取消",
                        clear: "清空",
                        confirm: "确定",
                        selectDate: "选择日期",
                        selectTime: "选择时间",
                        startDate: "开始日期",
                        startTime: "开始时间",
                        endDate: "结束日期",
                        endTime: "结束时间",
                        prevYear: "前一年",
                        nextYear: "后一年",
                        prevMonth: "上个月",
                        nextMonth: "下个月",
                        year: "年",
                        month1: "1 月",
                        month2: "2 月",
                        month3: "3 月",
                        month4: "4 月",
                        month5: "5 月",
                        month6: "6 月",
                        month7: "7 月",
                        month8: "8 月",
                        month9: "9 月",
                        month10: "10 月",
                        month11: "11 月",
                        month12: "12 月",
                        weeks: {
                            sun: "日",
                            mon: "一",
                            tue: "二",
                            wed: "三",
                            thu: "四",
                            fri: "五",
                            sat: "六"
                        },
                        months: {
                            jan: "一月",
                            feb: "二月",
                            mar: "三月",
                            apr: "四月",
                            may: "五月",
                            jun: "六月",
                            jul: "七月",
                            aug: "八月",
                            sep: "九月",
                            oct: "十月",
                            nov: "十一月",
                            dec: "十二月"
                        }
                    },
                    select: {
                        loading: "加载中",
                        noMatch: "无匹配数据",
                        noData: "无数据",
                        placeholder: "请选择"
                    },
                    cascader: {
                        noMatch: "无匹配数据",
                        loading: "加载中",
                        placeholder: "请选择",
                        noData: "暂无数据"
                    },
                    pagination: {
                        goto: "前往",
                        pagesize: "条/页",
                        total: "共 {total} 条",
                        pageClassifier: "页"
                    },
                    messagebox: {
                        title: "提示",
                        confirm: "确定",
                        cancel: "取消",
                        error: "输入的数据不合法!"
                    },
                    upload: {
                        deleteTip: "按 delete 键可删除",
                        delete: "删除",
                        preview: "查看图片",
                        continue: "继续上传"
                    },
                    table: {
                        emptyText: "暂无数据",
                        confirmFilter: "筛选",
                        resetFilter: "重置",
                        clearFilter: "全部",
                        sumText: "合计"
                    },
                    tree: {
                        emptyText: "暂无数据"
                    },
                    transfer: {
                        noMatch: "无匹配数据",
                        noData: "无数据",
                        titles: ["列表 1", "列表 2"],
                        filterPlaceholder: "请输入搜索内容",
                        noCheckedFormat: "共 {total} 项",
                        hasCheckedFormat: "已选 {checked}/{total} 项"
                    },
                    image: {
                        error: "加载失败"
                    },
                    pageHeader: {
                        title: "返回"
                    },
                    popconfirm: {
                        confirmButtonText: "确定",
                        cancelButtonText: "取消"
                    },
                    empty: {
                        description: "暂无数据"
                    }
                }
            };
        },
        f14c: function(e, t, n) {
            (function(e) {
                ace.define("ace/mode/doc_comment_highlight_rules", ["require", "exports", "module", "ace/lib/oop", "ace/mode/text_highlight_rules"], function(e, t, n) {
                        "use strict";
                        var i = e("../lib/oop"),
                            o = e("./text_highlight_rules").TextHighlightRules,
                            r = function() {
                                this.$rules = {
                                    start: [{
                                        token: "comment.doc.tag",
                                        regex: "@[\\w\\d_]+"
                                    }, r.getTagRule(), {
                                        defaultToken: "comment.doc",
                                        caseInsensitive: true
                                    }]
                                };
                            };
                        i.inherits(r, o), r.getTagRule = function(e) {
                            return {
                                token: "comment.doc.tag.storage.type",
                                regex: "\\b(?:TODO|FIXME|XXX|HACK)\\b"
                            };
                        }, r.getStartRule = function(e) {
                            return {
                                token: "comment.doc",
                                regex: "\\/\\*(?=\\*)",
                                next: e
                            };
                        }, r.getEndRule = function(e) {
                            return {
                                token: "comment.doc",
                                regex: "\\*\\/",
                                next: e
                            };
                        }, t.DocCommentHighlightRules = r;
                    }), ace.define("ace/mode/javascript_highlight_rules", ["require", "exports", "module", "ace/lib/oop", "ace/mode/doc_comment_highlight_rules", "ace/mode/text_highlight_rules"], function(e, t, n) {
                        "use strict";

                        function i() {
                            var e = l.replace("\\d", "\\d\\-"),
                                t = {
                                    onMatch: function(e, t, n) {
                                        var i = "/" == e.charAt(1) ? 2 : 1;
                                        return 1 == i ? (t != this.nextState ? n.unshift(this.next, this.nextState, 0) : n.unshift(this.next), n[2]++) : 2 == i && t == this.nextState && (n[1]--, (!n[1] || n[1] < 0) && (n.shift(), n.shift())), [{
                                            type: "meta.tag.punctuation." + (1 == i ? "" : "end-") + "tag-open.xml",
                                            value: e.slice(0, i)
                                        }, {
                                            type: "meta.tag.tag-name.xml",
                                            value: e.substr(i)
                                        }];
                                    },
                                    regex: "</?" + e,
                                    next: "jsxAttributes",
                                    nextState: "jsx"
                                };
                            this.$rules.start.unshift(t);
                            var n = {
                                regex: "{",
                                token: "paren.quasi.start",
                                push: "start"
                            };
                            this.$rules.jsx = [n, t, {
                                include: "reference"
                            }, {
                                defaultToken: "string"
                            }], this.$rules.jsxAttributes = [{
                                token: "meta.tag.punctuation.tag-close.xml",
                                regex: "/?>",
                                onMatch: function(e, t, n) {
                                    return t == n[0] && n.shift(), 2 == e.length && (n[0] == this.nextState && n[1]--, (!n[1] || n[1] < 0) && n.splice(0, 2)), this.next = n[0] || "start", [{
                                        type: this.token,
                                        value: e
                                    }];
                                },
                                nextState: "jsx"
                            }, n, o("jsxAttributes"), {
                                token: "entity.other.attribute-name.xml",
                                regex: e
                            }, {
                                token: "keyword.operator.attribute-equals.xml",
                                regex: "="
                            }, {
                                token: "text.tag-whitespace.xml",
                                regex: "\\s+"
                            }, {
                                token: "string.attribute-value.xml",
                                regex: "'",
                                stateName: "jsx_attr_q",
                                push: [{
                                    token: "string.attribute-value.xml",
                                    regex: "'",
                                    next: "pop"
                                }, {
                                    include: "reference"
                                }, {
                                    defaultToken: "string.attribute-value.xml"
                                }]
                            }, {
                                token: "string.attribute-value.xml",
                                regex: '"',
                                stateName: "jsx_attr_qq",
                                push: [{
                                    token: "string.attribute-value.xml",
                                    regex: '"',
                                    next: "pop"
                                }, {
                                    include: "reference"
                                }, {
                                    defaultToken: "string.attribute-value.xml"
                                }]
                            }, t], this.$rules.reference = [{
                                token: "constant.language.escape.reference.xml",
                                regex: "(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\.-]+;)"
                            }];
                        }

                        function o(e) {
                            return [{
                                token: "comment",
                                regex: /\/\*/,
                                next: [s.getTagRule(), {
                                    token: "comment",
                                    regex: "\\*\\/",
                                    next: e || "pop"
                                }, {
                                    defaultToken: "comment",
                                    caseInsensitive: true
                                }]
                            }, {
                                token: "comment",
                                regex: "\\/\\/",
                                next: [s.getTagRule(), {
                                    token: "comment",
                                    regex: "$|^",
                                    next: e || "pop"
                                }, {
                                    defaultToken: "comment",
                                    caseInsensitive: true
                                }]
                            }];
                        }
                        var r = e("../lib/oop"),
                            s = e("./doc_comment_highlight_rules").DocCommentHighlightRules,
                            a = e("./text_highlight_rules").TextHighlightRules,
                            l = "[a-zA-Z\\$_¡-￿][a-zA-Z\\d\\$_¡-￿]*",
                            c = function(e) {
                                var t = this.createKeywordMapper({
                                        "variable.language": "Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|Namespace|QName|XML|XMLList|ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|SyntaxError|TypeError|URIError|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|isNaN|parseFloat|parseInt|JSON|Math|this|arguments|prototype|window|document",
                                        keyword: "const|yield|import|get|set|async|await|break|case|catch|continue|default|delete|do|else|finally|for|function|if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|__parent__|__count__|escape|unescape|with|__proto__|class|enum|extends|super|export|implements|private|public|interface|package|protected|static",
                                        "storage.type": "const|let|var|function",
                                        "constant.language": "null|Infinity|NaN|undefined",
                                        "support.function": "alert",
                                        "constant.language.boolean": "true|false"
                                    }, "identifier"),
                                    n = "case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void",
                                    r = "\\\\(?:x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|u{[0-9a-fA-F]{1,6}}|[0-2][0-7]{0,2}|3[0-7][0-7]?|[4-7][0-7]?|.)";
                                this.$rules = {
                                    no_regex: [s.getStartRule("doc-start"), o("no_regex"), {
                                        token: "string",
                                        regex: "'(?=.)",
                                        next: "qstring"
                                    }, {
                                        token: "string",
                                        regex: '"(?=.)',
                                        next: "qqstring"
                                    }, {
                                        token: "constant.numeric",
                                        regex: /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\b/
                                    }, {
                                        token: "constant.numeric",
                                        regex: /(?:\d\d*(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+\b)?/
                                    }, {
                                        token: ["storage.type", "punctuation.operator", "support.function", "punctuation.operator", "entity.name.function", "text", "keyword.operator"],
                                        regex: "(" + l + ")(\\.)(prototype)(\\.)(" + l + ")(\\s*)(=)",
                                        next: "function_arguments"
                                    }, {
                                        token: ["storage.type", "punctuation.operator", "entity.name.function", "text", "keyword.operator", "text", "storage.type", "text", "paren.lparen"],
                                        regex: "(" + l + ")(\\.)(" + l + ")(\\s*)(=)(\\s*)(function)(\\s*)(\\()",
                                        next: "function_arguments"
                                    }, {
                                        token: ["entity.name.function", "text", "keyword.operator", "text", "storage.type", "text", "paren.lparen"],
                                        regex: "(" + l + ")(\\s*)(=)(\\s*)(function)(\\s*)(\\()",
                                        next: "function_arguments"
                                    }, {
                                        token: ["storage.type", "punctuation.operator", "entity.name.function", "text", "keyword.operator", "text", "storage.type", "text", "entity.name.function", "text", "paren.lparen"],
                                        regex: "(" + l + ")(\\.)(" + l + ")(\\s*)(=)(\\s*)(function)(\\s+)(\\w+)(\\s*)(\\()",
                                        next: "function_arguments"
                                    }, {
                                        token: ["storage.type", "text", "entity.name.function", "text", "paren.lparen"],
                                        regex: "(function)(\\s+)(" + l + ")(\\s*)(\\()",
                                        next: "function_arguments"
                                    }, {
                                        token: ["entity.name.function", "text", "punctuation.operator", "text", "storage.type", "text", "paren.lparen"],
                                        regex: "(" + l + ")(\\s*)(:)(\\s*)(function)(\\s*)(\\()",
                                        next: "function_arguments"
                                    }, {
                                        token: ["text", "text", "storage.type", "text", "paren.lparen"],
                                        regex: "(:)(\\s*)(function)(\\s*)(\\()",
                                        next: "function_arguments"
                                    }, {
                                        token: "keyword",
                                        regex: "from(?=\\s*('|\"))"
                                    }, {
                                        token: "keyword",
                                        regex: "(?:" + n + ")\\b",
                                        next: "start"
                                    }, {
                                        token: ["support.constant"],
                                        regex: /that\b/
                                    }, {
                                        token: ["storage.type", "punctuation.operator", "support.function.firebug"],
                                        regex: /(console)(\.)(warn|info|log|error|time|trace|timeEnd|assert)\b/
                                    }, {
                                        token: t,
                                        regex: l
                                    }, {
                                        token: "punctuation.operator",
                                        regex: /[.](?![.])/,
                                        next: "property"
                                    }, {
                                        token: "storage.type",
                                        regex: /=>/,
                                        next: "start"
                                    }, {
                                        token: "keyword.operator",
                                        regex: /--|\+\+|\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\|\||\?:|[!$%&*+\-~\/^]=?/,
                                        next: "start"
                                    }, {
                                        token: "punctuation.operator",
                                        regex: /[?:,;.]/,
                                        next: "start"
                                    }, {
                                        token: "paren.lparen",
                                        regex: /[\[({]/,
                                        next: "start"
                                    }, {
                                        token: "paren.rparen",
                                        regex: /[\])}]/
                                    }, {
                                        token: "comment",
                                        regex: /^#!.*$/
                                    }],
                                    property: [{
                                        token: "text",
                                        regex: "\\s+"
                                    }, {
                                        token: ["storage.type", "punctuation.operator", "entity.name.function", "text", "keyword.operator", "text", "storage.type", "text", "entity.name.function", "text", "paren.lparen"],
                                        regex: "(" + l + ")(\\.)(" + l + ")(\\s*)(=)(\\s*)(function)(?:(\\s+)(\\w+))?(\\s*)(\\()",
                                        next: "function_arguments"
                                    }, {
                                        token: "punctuation.operator",
                                        regex: /[.](?![.])/
                                    }, {
                                        token: "support.function",
                                        regex: /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\b(?=\()/
                                    }, {
                                        token: "support.function.dom",
                                        regex: /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\b(?=\()/
                                    }, {
                                        token: "support.constant",
                                        regex: /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\b/
                                    }, {
                                        token: "identifier",
                                        regex: l
                                    }, {
                                        regex: "",
                                        token: "empty",
                                        next: "no_regex"
                                    }],
                                    start: [s.getStartRule("doc-start"), o("start"), {
                                        token: "string.regexp",
                                        regex: "\\/",
                                        next: "regex"
                                    }, {
                                        token: "text",
                                        regex: "\\s+|^$",
                                        next: "start"
                                    }, {
                                        token: "empty",
                                        regex: "",
                                        next: "no_regex"
                                    }],
                                    regex: [{
                                        token: "regexp.keyword.operator",
                                        regex: "\\\\(?:u[\\da-fA-F]{4}|x[\\da-fA-F]{2}|.)"
                                    }, {
                                        token: "string.regexp",
                                        regex: "/[sxngimy]*",
                                        next: "no_regex"
                                    }, {
                                        token: "invalid",
                                        regex: /\{\d+\b,?\d*\}[+*]|[+*$^?][+*]|[$^][?]|\?{3,}/
                                    }, {
                                        token: "constant.language.escape",
                                        regex: /\(\?[:=!]|\)|\{\d+\b,?\d*\}|[+*]\?|[()$^+*?.]/
                                    }, {
                                        token: "constant.language.delimiter",
                                        regex: /\|/
                                    }, {
                                        token: "constant.language.escape",
                                        regex: /\[\^?/,
                                        next: "regex_character_class"
                                    }, {
                                        token: "empty",
                                        regex: "$",
                                        next: "no_regex"
                                    }, {
                                        defaultToken: "string.regexp"
                                    }],
                                    regex_character_class: [{
                                        token: "regexp.charclass.keyword.operator",
                                        regex: "\\\\(?:u[\\da-fA-F]{4}|x[\\da-fA-F]{2}|.)"
                                    }, {
                                        token: "constant.language.escape",
                                        regex: "]",
                                        next: "regex"
                                    }, {
                                        token: "constant.language.escape",
                                        regex: "-"
                                    }, {
                                        token: "empty",
                                        regex: "$",
                                        next: "no_regex"
                                    }, {
                                        defaultToken: "string.regexp.charachterclass"
                                    }],
                                    function_arguments: [{
                                        token: "variable.parameter",
                                        regex: l
                                    }, {
                                        token: "punctuation.operator",
                                        regex: "[, ]+"
                                    }, {
                                        token: "punctuation.operator",
                                        regex: "$"
                                    }, {
                                        token: "empty",
                                        regex: "",
                                        next: "no_regex"
                                    }],
                                    qqstring: [{
                                        token: "constant.language.escape",
                                        regex: r
                                    }, {
                                        token: "string",
                                        regex: "\\\\$",
                                        consumeLineEnd: true
                                    }, {
                                        token: "string",
                                        regex: '"|$',
                                        next: "no_regex"
                                    }, {
                                        defaultToken: "string"
                                    }],
                                    qstring: [{
                                        token: "constant.language.escape",
                                        regex: r
                                    }, {
                                        token: "string",
                                        regex: "\\\\$",
                                        consumeLineEnd: true
                                    }, {
                                        token: "string",
                                        regex: "'|$",
                                        next: "no_regex"
                                    }, {
                                        defaultToken: "string"
                                    }]
                                }, e && e.noES6 || (this.$rules.no_regex.unshift({
                                    regex: "[{}]",
                                    onMatch: function(e, t, n) {
                                        if (this.next = "{" == e ? this.nextState : "", "{" == e && n.length) n.unshift("start", t);
                                        else if ("}" == e && n.length && (n.shift(), this.next = n.shift(), -1 != this.next.indexOf("string") || -1 != this.next.indexOf("jsx"))) return "paren.quasi.end";
                                        return "{" == e ? "paren.lparen" : "paren.rparen";
                                    },
                                    nextState: "start"
                                }, {
                                    token: "string.quasi.start",
                                    regex: /`/,
                                    push: [{
                                        token: "constant.language.escape",
                                        regex: r
                                    }, {
                                        token: "paren.quasi.start",
                                        regex: /\${/,
                                        push: "start"
                                    }, {
                                        token: "string.quasi.end",
                                        regex: /`/,
                                        next: "pop"
                                    }, {
                                        defaultToken: "string.quasi"
                                    }]
                                }), (!e || 0 != e.jsx) && i.call(this)), this.embedRules(s, "doc-", [s.getEndRule("no_regex")]), this.normalizeRules();
                            };
                        r.inherits(c, a), t.JavaScriptHighlightRules = c;
                    }), ace.define("ace/mode/matching_brace_outdent", ["require", "exports", "module", "ace/range"], function(e, t, n) {
                        "use strict";
                        var i = e("../range").Range,
                            o = function() {};
                        (function() {
                            this.checkOutdent = function(e, t) {
                                return !!/^\s+$/.test(e) && /^\s*\}/.test(t);
                            }, this.autoOutdent = function(e, t) {
                                var n = e.getLine(t),
                                    o = n.match(/^(\s*\})/);
                                if (!o) return 0;
                                var r = o[1].length,
                                    s = e.findMatchingBracket({
                                        row: t,
                                        column: r
                                    });
                                if (!s || s.row == t) return 0;
                                var a = this.$getIndent(e.getLine(s.row));
                                e.replace(new i(t, 0, t, r - 1), a);
                            }, this.$getIndent = function(e) {
                                return e.match(/^\s*/)[0];
                            };
                        }.call(o.prototype), t.MatchingBraceOutdent = o);
                    }), ace.define("ace/mode/folding/cstyle", ["require", "exports", "module", "ace/lib/oop", "ace/range", "ace/mode/folding/fold_mode"], function(e, t, n) {
                        "use strict";
                        var i = e("../../lib/oop"),
                            o = e("../../range").Range,
                            r = e("./fold_mode").FoldMode,
                            s = t.FoldMode = function(e) {
                                e && (this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\|[^|]*?$/, "|" + e.start)), this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\|[^|]*?$/, "|" + e.end)));
                            };
                        i.inherits(s, r),
                            function() {
                                this.foldingStartMarker = /([\{\[\(])[^\}\]\)]*$|^\s*(\/\*)/, this.foldingStopMarker = /^[^\[\{\(]*([\}\]\)])|^[\s\*]*(\*\/)/, this.singleLineBlockCommentRe = /^\s*(\/\*).*\*\/\s*$/, this.tripleStarBlockCommentRe = /^\s*(\/\*\*\*).*\*\/\s*$/, this.startRegionRe = /^\s*(\/\*|\/\/)#?region\b/, this._getFoldWidgetBase = this.getFoldWidget, this.getFoldWidget = function(e, t, n) {
                                    var i = e.getLine(n);
                                    if (this.singleLineBlockCommentRe.test(i) && !this.startRegionRe.test(i) && !this.tripleStarBlockCommentRe.test(i)) return "";
                                    var o = this._getFoldWidgetBase(e, t, n);
                                    return !o && this.startRegionRe.test(i) ? "start" : o;
                                }, this.getFoldWidgetRange = function(e, t, n, i) {
                                    var o = e.getLine(n);
                                    if (this.startRegionRe.test(o)) return this.getCommentRegionBlock(e, o, n);
                                    var r = o.match(this.foldingStartMarker);
                                    if (r) {
                                        var s = r.index;
                                        if (r[1]) return this.openingBracketBlock(e, r[1], n, s);
                                        var a = e.getCommentFoldRange(n, s + r[0].length, 1);
                                        return a && !a.isMultiLine() && (i ? a = this.getSectionRange(e, n) : "all" != t && (a = null)), a;
                                    }
                                    if ("markbegin" !== t) {
                                        r = o.match(this.foldingStopMarker);
                                        if (r) {
                                            s = r.index + r[0].length;
                                            return r[1] ? this.closingBracketBlock(e, r[1], n, s) : e.getCommentFoldRange(n, s, -1);
                                        }
                                    }
                                }, this.getSectionRange = function(e, t) {
                                    var n = e.getLine(t),
                                        i = n.search(/\S/),
                                        r = t,
                                        s = n.length;
                                    t += 1;
                                    var a = t,
                                        l = e.getLength();
                                    while (++t < l) {
                                        n = e.getLine(t);
                                        var c = n.search(/\S/);
                                        if (-1 !== c) {
                                            if (i > c) break;
                                            var u = this.getFoldWidgetRange(e, "all", t);
                                            if (u) {
                                                if (u.start.row <= r) break;
                                                if (u.isMultiLine()) t = u.end.row;
                                                else if (i == c) break;
                                            }
                                            a = t;
                                        }
                                    }
                                    return new o(r, s, a, e.getLine(a).length);
                                }, this.getCommentRegionBlock = function(e, t, n) {
                                    var i = t.search(/\s*$/),
                                        r = e.getLength(),
                                        s = n,
                                        a = /^\s*(?:\/\*|\/\/|--)#?(end)?region\b/,
                                        l = 1;
                                    while (++n < r) {
                                        t = e.getLine(n);
                                        var c = a.exec(t);
                                        if (c && (c[1] ? l-- : l++, !l)) break;
                                    }
                                    var u = n;
                                    if (u > s) return new o(s, i, u, t.length);
                                };
                            }.call(s.prototype);
                    }), ace.define("ace/mode/javascript", ["require", "exports", "module", "ace/lib/oop", "ace/mode/text", "ace/mode/javascript_highlight_rules", "ace/mode/matching_brace_outdent", "ace/worker/worker_client", "ace/mode/behaviour/cstyle", "ace/mode/folding/cstyle"], function(e, t, n) {
                        "use strict";
                        var i = e("../lib/oop"),
                            o = e("./text").Mode,
                            r = e("./javascript_highlight_rules").JavaScriptHighlightRules,
                            s = e("./matching_brace_outdent").MatchingBraceOutdent,
                            a = e("../worker/worker_client").WorkerClient,
                            l = e("./behaviour/cstyle").CstyleBehaviour,
                            c = e("./folding/cstyle").FoldMode,
                            u = function() {
                                this.HighlightRules = r, this.$outdent = new s, this.$behaviour = new l, this.foldingRules = new c;
                            };
                        i.inherits(u, o),
                            function() {
                                this.lineCommentStart = "//", this.blockComment = {
                                    start: "/*",
                                    end: "*/"
                                }, this.$quotes = {
                                    '"': '"',
                                    "'": "'",
                                    "`": "`"
                                }, this.getNextLineIndent = function(e, t, n) {
                                    var i = this.$getIndent(t),
                                        o = this.getTokenizer().getLineTokens(t, e),
                                        r = o.tokens,
                                        s = o.state;
                                    if (r.length && "comment" == r[r.length - 1].type) return i;
                                    if ("start" == e || "no_regex" == e) {
                                        var a = t.match(/^.*(?:\bcase\b.*:|[\{\(\[])\s*$/);
                                        a && (i += n);
                                    } else if ("doc-start" == e) {
                                        if ("start" == s || "no_regex" == s) return "";
                                        a = t.match(/^\s*(\/?)\*/);
                                        a && (a[1] && (i += " "), i += "* ");
                                    }
                                    return i;
                                }, this.checkOutdent = function(e, t, n) {
                                    return this.$outdent.checkOutdent(t, n);
                                }, this.autoOutdent = function(e, t, n) {
                                    this.$outdent.autoOutdent(t, n);
                                }, this.createWorker = function(e) {
                                    var t = new a(["ace"], "ace/mode/javascript_worker", "JavaScriptWorker");
                                    return t.attachToDocument(e.getDocument()), t.on("annotate", function(t) {
                                        e.setAnnotations(t.data);
                                    }), t.on("terminate", function() {
                                        e.clearAnnotations();
                                    }), t;
                                }, this.$id = "ace/mode/javascript", this.snippetFileId = "ace/snippets/javascript";
                            }.call(u.prototype), t.Mode = u;
                    }),
                    function() {
                        ace.require(["ace/mode/javascript"], function(t) {
                            e && (e.exports = t);
                        });
                    }();
            }.call(this, n("62e4")(e)));
        },
        f183: function(e, t, n) {
            var i = n("23e7"),
                o = n("e330"),
                r = n("d012"),
                s = n("861d"),
                a = n("1a2d"),
                l = n("9bf2").f,
                c = n("241c"),
                u = n("057f"),
                d = n("4fad"),
                h = n("90e3"),
                f = n("bb2f"),
                p = false,
                m = h("meta"),
                g = 0,
                v = function(e) {
                    l(e, m, {
                        value: {
                            objectID: "O" + g++,
                            weakData: {}
                        }
                    });
                },
                b = function(e, t) {
                    if (!s(e)) return "symbol" == typeof e ? e : ("string" == typeof e ? "S" : "P") + e;
                    if (!a(e, m)) {
                        if (!d(e)) return "F";
                        if (!t) return "E";
                        v(e);
                    }
                    return e[m].objectID;
                },
                y = function(e, t) {
                    if (!a(e, m)) {
                        if (!d(e)) return true;
                        if (!t) return false;
                        v(e);
                    }
                    return e[m].weakData;
                },
                x = function() {
                    _.enable = function() {}, p = true;
                    var e = c.f,
                        t = o([].splice),
                        n = {};
                    n[m] = 1, e(n).length && (c.f = function(n) {
                        for (var i = e(n), o = 0, r = i.length; o < r; o++)
                            if (i[o] === m) {
                                t(i, o, 1);
                                break;
                            }
                        return i;
                    }, i({
                        target: "Object",
                        stat: true,
                        forced: true
                    }, {
                        getOwnPropertyNames: u.f
                    }));
                },
                _ = e.exports = {
                    enable: x,
                    fastKey: b,
                    getWeakData: y,
                    onFreeze: w
                };
            r[m] = true;
        },
        f250: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = n("e017"),
                o = n.n(i),
                r = n("21a1"),
                s = n.n(r),
                a = new o.a({
                    id: "icon-rate-field",
                    use: "icon-rate-field-usage",
                    viewBox: "0 0 1069 1024",
                    content: '<symbol class="icon" viewBox="0 0 1069 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="icon-rate-field"><defs><style type="text/css"></style></defs><path d="M633.73 378.02l9.498 18.688 20.78 2.798 206.616 27.332a11.465 11.465 0 0 1 6.61 19.473L729.966 593.665l-14.893 14.893 3.8 20.683 37.847 204.89a11.465 11.465 0 0 1-16.481 12.296l-185.55-94.58-18.687-9.493-18.487 9.992-183.24 99.35a11.465 11.465 0 0 1-16.784-11.867l32.543-205.796 3.297-20.786-15.192-14.492-151.033-143.484a11.465 11.465 0 0 1 6.1-19.64L399 402.998l20.786-3.296 9.092-18.98 89.713-188.078a11.465 11.465 0 0 1 20.569-0.263l94.568 185.635zM496.647 85.52L374.89 340.501l-279.126 44.26a34.395 34.395 0 0 0-18.303 58.908l204.873 194.663-44.169 279.115a34.395 34.395 0 0 0 50.366 35.616l248.4-134.679L788.776 946.66a34.395 34.395 0 0 0 49.437-36.894l-51.306-277.854 199.731-199.909a34.395 34.395 0 0 0-19.828-58.408l-280.118-37.032L558.33 84.713a34.395 34.395 0 0 0-61.682 0.802z" p-id="49627" /></symbol>'
                });
            s.a.add(a);
            t.default = a;
        },
        f2db: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = n("e017"),
                o = n.n(i),
                r = n("21a1"),
                s = n.n(r),
                a = new o.a({
                    id: "icon-alert",
                    use: "icon-alert-usage",
                    viewBox: "0 0 1024 1024",
                    content: '<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="icon-alert"><defs><style type="text/css"></style></defs><path d="M512 85.162667a319.573333 319.573333 0 0 1 319.829333 309.333333l0.170667 10.666667v174.805333l58.88 134.656a53.290667 53.290667 0 0 1-48.853333 74.709333L640 789.418667a128 128 0 0 1-255.786667 7.509333L384 789.290667l-201.6 0.042666a53.333333 53.333333 0 0 1-48.938667-74.581333L192 580.010667V405.162667c0-177.28 143.018667-320 320-320zM576 789.333333l-128 0.128a64 64 0 0 0 127.701333 6.144l0.256-6.272zM512 149.162667c-141.653333 0-256 114.090667-256 256v188.16L198.656 725.333333h627.072L768 593.365333V405.717333l-0.170667-9.6A255.488 255.488 0 0 0 512 149.162667z m384 202.837333h85.333333a32 32 0 0 1 4.352 63.701333L981.333333 416h-85.333333a32 32 0 0 1-4.352-63.701333L896 352z m-853.333333 0h85.333333a32 32 0 0 1 4.352 63.701333L128 416H42.666667a32 32 0 0 1-4.352-63.701333L42.666667 352z m921.6-243.2a32 32 0 0 1-2.816 41.685333l-3.584 3.114667-85.333334 64a32 32 0 0 1-41.984-48.085333l3.584-3.114667 85.333334-64a32 32 0 0 1 44.8 6.4zM104.533333 102.4l85.333334 64a32 32 0 1 1-38.4 51.2l-85.333334-64a32 32 0 1 1 38.4-51.2z" p-id="6432" /></symbol>'
                });
            s.a.add(a);
            t.default = a;
        },
        f319: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("el-form-item", {
                        attrs: {
                            label: e.i18nt("designer.setting.labelTooltip")
                        }
                    }, [n("el-input", {
                        attrs: {
                            type: "text"
                        },
                        model: {
                            value: e.optionModel.labelTooltip,
                            callback: function(t) {
                                e.$set(e.optionModel, "labelTooltip", t);
                            },
                            expression: "optionModel.labelTooltip"
                        }
                    })], 1);
                },
                o = [],
                r = n("79fa"),
                s = {
                    name: "labelTooltip-editor",
                    mixins: [r.b],
                    props: {
                        designer: Object,
                        selectedWidget: Object,
                        optionModel: Object
                    }
                },
                a = s,
                l = n("2877"),
                c = Object(l.a)(a, i, o, false, null, "4bb85541", null);
            t.default = c.exports;
        },
        f355: function(e, t, n) {},
        f36a: function(e, t, n) {
            var i = n("e330");
            e.exports = i([].slice);
        },
        f388: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("div", [n("el-form-item", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: !!e.isSubFormChildWidget(),
                            expression: "!!isSubFormChildWidget()"
                        }],
                        attrs: {
                            label: e.i18nt("designer.setting.widgetColumnWidth")
                        }
                    }, [n("el-input", {
                        attrs: {
                            type: "text"
                        },
                        model: {
                            value: e.optionModel.columnWidth,
                            callback: function(t) {
                                e.$set(e.optionModel, "columnWidth", t);
                            },
                            expression: "optionModel.columnWidth"
                        }
                    })], 1)], 1);
                },
                o = [],
                r = n("79fa"),
                s = {
                    name: "columnWidth-editor",
                    mixins: [r.b],
                    props: {
                        designer: Object,
                        selectedWidget: Object,
                        optionModel: Object
                    },
                    inject: ["isSubFormChildWidget"]
                },
                a = s,
                l = n("2877"),
                c = Object(l.a)(a, i, o, false, null, "5f410a01", null);
            t.default = c.exports;
        },
        f3ad: function(e, t, n) {
            var i = n("7037").default;
            n("a4d3"), n("e01a"), n("d3b7"), n("944a"), n("0c47"), n("23dc"), n("99af"), n("a15b"), n("d81d"), n("a9e3"), n("fb6a"), n("b0c0"), e.exports = function(e) {
                var t = {};

                function n(i) {
                    if (t[i]) return t[i].exports;
                    var o = t[i] = {
                        i: i,
                        l: false,
                        exports: {}
                    };
                    return e[i].call(o.exports, o, o.exports, n), o.l = true, o.exports;
                }
                return n.m = e, n.c = t, n.d = function(e, t, i) {
                    n.o(e, t) || Object.defineProperty(e, t, {
                        enumerable: true,
                        get: i
                    });
                }, n.r = function(e) {
                    "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                        value: "Module"
                    }), Object.defineProperty(e, "__esModule", {
                        value: true
                    });
                }, n.t = function(e, t) {
                    if (1 & t && (e = n(e)), 8 & t) return e;
                    if (4 & t && "object" === i(e) && e && e.__esModule) return e;
                    var o = Object.create(null);
                    if (n.r(o), Object.defineProperty(o, "default", {
                            enumerable: true,
                            value: e
                        }), 2 & t && "string" != typeof e)
                        for (var r in e) n.d(o, r, function(t) {
                            return e[t];
                        }.bind(null, r));
                    return o;
                }, n.n = function(e) {
                    var t = e && e.__esModule ? function() {
                        return e.default;
                    } : function() {
                        return e;
                    };
                    return n.d(t, "a", t), t;
                }, n.o = function(e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t);
                }, n.p = "/dist/", n(n.s = 73);
            }({
                0: function(e, t, n) {
                    "use strict";

                    function i(e, t, n, i, o, r, s, a) {
                        var l, c = "function" === typeof e ? e.options : e;
                        if (t && (c.render = t, c.staticRenderFns = n, c._compiled = true), i && (c.functional = true), r && (c._scopeId = "data-v-" + r), s ? (l = function(e) {
                                e = e || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, e || "undefined" === typeof __VUE_SSR_CONTEXT__ || (e = __VUE_SSR_CONTEXT__), o && o.call(this, e), e && e._registeredComponents && e._registeredComponents.add(s);
                            }, c._ssrRegister = l) : o && (l = a ? function() {
                                o.call(this, this.$root.$options.shadowRoot);
                            } : o), l)
                            if (c.functional) {
                                c._injectStyles = l;
                                var u = c.render;
                                c.render = function(e, t) {
                                    return l.call(t), u(e, t);
                                };
                            } else {
                                var d = c.beforeCreate;
                                c.beforeCreate = d ? [].concat(d, l) : [l];
                            }
                        return {
                            exports: e,
                            options: c
                        };
                    }
                    n.d(t, "a", function() {
                        return i;
                    });
                },
                11: function(e, t) {
                    e.exports = n("2bb5");
                },
                21: function(e, t) {
                    e.exports = n("d397");
                },
                4: function(e, t) {
                    e.exports = n("d010");
                },
                73: function(e, t, n) {
                    "use strict";
                    n.r(t);
                    var i = function() {
                            var e = this,
                                t = e.$createElement,
                                n = e._self._c || t;
                            return n("div", {
                                class: ["textarea" === e.type ? "el-textarea" : "el-input", e.inputSize ? "el-input--" + e.inputSize : "", {
                                    "is-disabled": e.inputDisabled,
                                    "is-exceed": e.inputExceed,
                                    "el-input-group": e.$slots.prepend || e.$slots.append,
                                    "el-input-group--append": e.$slots.append,
                                    "el-input-group--prepend": e.$slots.prepend,
                                    "el-input--prefix": e.$slots.prefix || e.prefixIcon,
                                    "el-input--suffix": e.$slots.suffix || e.suffixIcon || e.clearable || e.showPassword
                                }],
                                on: {
                                    mouseenter: function(t) {
                                        e.hovering = true;
                                    },
                                    mouseleave: function(t) {
                                        e.hovering = false;
                                    }
                                }
                            }, ["textarea" !== e.type ? [e.$slots.prepend ? n("div", {
                                staticClass: "el-input-group__prepend"
                            }, [e._t("prepend")], 2) : e._e(), "textarea" !== e.type ? n("input", e._b({
                                ref: "input",
                                staticClass: "el-input__inner",
                                attrs: {
                                    tabindex: e.tabindex,
                                    type: e.showPassword ? e.passwordVisible ? "text" : "password" : e.type,
                                    disabled: e.inputDisabled,
                                    readonly: e.readonly,
                                    autocomplete: e.autoComplete || e.autocomplete,
                                    "aria-label": e.label
                                },
                                on: {
                                    compositionstart: e.handleCompositionStart,
                                    compositionupdate: e.handleCompositionUpdate,
                                    compositionend: e.handleCompositionEnd,
                                    input: e.handleInput,
                                    focus: e.handleFocus,
                                    blur: e.handleBlur,
                                    change: e.handleChange
                                }
                            }, "input", e.$attrs, false)) : e._e(), e.$slots.prefix || e.prefixIcon ? n("span", {
                                staticClass: "el-input__prefix"
                            }, [e._t("prefix"), e.prefixIcon ? n("i", {
                                staticClass: "el-input__icon",
                                class: e.prefixIcon
                            }) : e._e()], 2) : e._e(), e.getSuffixVisible() ? n("span", {
                                staticClass: "el-input__suffix"
                            }, [n("span", {
                                staticClass: "el-input__suffix-inner"
                            }, [e.showClear && e.showPwdVisible && e.isWordLimitVisible ? e._e() : [e._t("suffix"), e.suffixIcon ? n("i", {
                                staticClass: "el-input__icon",
                                class: e.suffixIcon
                            }) : e._e()], e.showClear ? n("i", {
                                staticClass: "el-input__icon el-icon-circle-close el-input__clear",
                                on: {
                                    mousedown: function(e) {
                                        e.preventDefault();
                                    },
                                    click: e.clear
                                }
                            }) : e._e(), e.showPwdVisible ? n("i", {
                                staticClass: "el-input__icon el-icon-view el-input__clear",
                                on: {
                                    click: e.handlePasswordVisible
                                }
                            }) : e._e(), e.isWordLimitVisible ? n("span", {
                                staticClass: "el-input__count"
                            }, [n("span", {
                                staticClass: "el-input__count-inner"
                            }, [e._v("\n            " + e._s(e.textLength) + "/" + e._s(e.upperLimit) + "\n          ")])]) : e._e()], 2), e.validateState ? n("i", {
                                staticClass: "el-input__icon",
                                class: ["el-input__validateIcon", e.validateIcon]
                            }) : e._e()]) : e._e(), e.$slots.append ? n("div", {
                                staticClass: "el-input-group__append"
                            }, [e._t("append")], 2) : e._e()] : n("textarea", e._b({
                                ref: "textarea",
                                staticClass: "el-textarea__inner",
                                style: e.textareaStyle,
                                attrs: {
                                    tabindex: e.tabindex,
                                    disabled: e.inputDisabled,
                                    readonly: e.readonly,
                                    autocomplete: e.autoComplete || e.autocomplete,
                                    "aria-label": e.label
                                },
                                on: {
                                    compositionstart: e.handleCompositionStart,
                                    compositionupdate: e.handleCompositionUpdate,
                                    compositionend: e.handleCompositionEnd,
                                    input: e.handleInput,
                                    focus: e.handleFocus,
                                    blur: e.handleBlur,
                                    change: e.handleChange
                                }
                            }, "textarea", e.$attrs, false)), e.isWordLimitVisible && "textarea" === e.type ? n("span", {
                                staticClass: "el-input__count"
                            }, [e._v(e._s(e.textLength) + "/" + e._s(e.upperLimit))]) : e._e()], 2);
                        },
                        o = [];
                    i._withStripped = true;
                    var r = n(4),
                        s = n.n(r),
                        a = n(11),
                        l = n.n(a),
                        c = undefined,
                        u = "\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n",
                        d = ["letter-spacing", "line-height", "padding-top", "padding-bottom", "font-family", "font-weight", "font-size", "text-rendering", "text-transform", "width", "text-indent", "padding-left", "padding-right", "border-width", "box-sizing"];

                    function h(e) {
                        var t = window.getComputedStyle(e),
                            n = t.getPropertyValue("box-sizing"),
                            i = parseFloat(t.getPropertyValue("padding-bottom")) + parseFloat(t.getPropertyValue("padding-top")),
                            o = parseFloat(t.getPropertyValue("border-bottom-width")) + parseFloat(t.getPropertyValue("border-top-width")),
                            r = d.map(function(e) {
                                return e + ":" + t.getPropertyValue(e);
                            }).join(";");
                        return {
                            contextStyle: r,
                            paddingSize: i,
                            borderSize: o,
                            boxSizing: n
                        };
                    }

                    function f(e) {
                        var t = arguments.length > 1 && undefined !== arguments[1] ? arguments[1] : 1,
                            n = arguments.length > 2 && undefined !== arguments[2] ? arguments[2] : null;
                        c || (c = document.createElement("textarea"), document.body.appendChild(c));
                        var i = h(e),
                            o = i.paddingSize,
                            r = i.borderSize,
                            s = i.boxSizing,
                            a = i.contextStyle;
                        c.setAttribute("style", a + ";" + u), c.value = e.value || e.placeholder || "";
                        var l = c.scrollHeight,
                            d = {};
                        "border-box" === s ? l += r : "content-box" === s && (l -= o), c.value = "";
                        var f = c.scrollHeight - o;
                        if (null !== t) {
                            var p = f * t;
                            "border-box" === s && (p = p + o + r), l = Math.max(p, l), d.minHeight = p + "px";
                        }
                        if (null !== n) {
                            var m = f * n;
                            "border-box" === s && (m = m + o + r), l = Math.min(m, l);
                        }
                        return d.height = l + "px", c.parentNode && c.parentNode.removeChild(c), c = null, d;
                    }
                    var p = n(9),
                        m = n.n(p),
                        g = n(21),
                        v = {
                            name: "ElInput",
                            componentName: "ElInput",
                            mixins: [s.a, l.a],
                            inheritAttrs: false,
                            inject: {
                                elForm: {
                                    default: ""
                                },
                                elFormItem: {
                                    default: ""
                                }
                            },
                            data: function() {
                                return {
                                    textareaCalcStyle: {},
                                    hovering: false,
                                    focused: false,
                                    isComposing: false,
                                    passwordVisible: false
                                };
                            },
                            props: {
                                value: [String, Number],
                                size: String,
                                resize: String,
                                form: String,
                                disabled: Boolean,
                                readonly: Boolean,
                                type: {
                                    type: String,
                                    default: "text"
                                },
                                autosize: {
                                    type: [Boolean, Object],
                                    default: false
                                },
                                autocomplete: {
                                    type: String,
                                    default: "off"
                                },
                                autoComplete: {
                                    type: String,
                                    validator: function(e) {
                                        return true;
                                    }
                                },
                                validateEvent: {
                                    type: Boolean,
                                    default: true
                                },
                                suffixIcon: String,
                                prefixIcon: String,
                                label: String,
                                clearable: {
                                    type: Boolean,
                                    default: false
                                },
                                showPassword: {
                                    type: Boolean,
                                    default: false
                                },
                                showWordLimit: {
                                    type: Boolean,
                                    default: false
                                },
                                tabindex: String
                            },
                            computed: {
                                _elFormItemSize: function() {
                                    return (this.elFormItem || {}).elFormItemSize;
                                },
                                validateState: function() {
                                    return this.elFormItem ? this.elFormItem.validateState : "";
                                },
                                needStatusIcon: function() {
                                    return !!this.elForm && this.elForm.statusIcon;
                                },
                                validateIcon: function() {
                                    return {
                                        validating: "el-icon-loading",
                                        success: "el-icon-circle-check",
                                        error: "el-icon-circle-close"
                                    } [this.validateState];
                                },
                                textareaStyle: function() {
                                    return m()({}, this.textareaCalcStyle, {
                                        resize: this.resize
                                    });
                                },
                                inputSize: function() {
                                    return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
                                },
                                inputDisabled: function() {
                                    return this.disabled || (this.elForm || {}).disabled;
                                },
                                nativeInputValue: function() {
                                    return null === this.value || undefined === this.value ? "" : String(this.value);
                                },
                                showClear: function() {
                                    return this.clearable && !this.inputDisabled && !this.readonly && this.nativeInputValue && (this.focused || this.hovering);
                                },
                                showPwdVisible: function() {
                                    return this.showPassword && !this.inputDisabled && !this.readonly && (!!this.nativeInputValue || this.focused);
                                },
                                isWordLimitVisible: function() {
                                    return this.showWordLimit && this.$attrs.maxlength && ("text" === this.type || "textarea" === this.type) && !this.inputDisabled && !this.readonly && !this.showPassword;
                                },
                                upperLimit: function() {
                                    return this.$attrs.maxlength;
                                },
                                textLength: function() {
                                    return "number" === typeof this.value ? String(this.value).length : (this.value || "").length;
                                },
                                inputExceed: function() {
                                    return this.isWordLimitVisible && this.textLength > this.upperLimit;
                                }
                            },
                            watch: {
                                value: function(e) {
                                    this.$nextTick(this.resizeTextarea), this.validateEvent && this.dispatch("ElFormItem", "el.form.change", [e]);
                                },
                                nativeInputValue: function() {
                                    this.setNativeInputValue();
                                },
                                type: function() {
                                    var e = this;
                                    this.$nextTick(function() {
                                        e.setNativeInputValue(), e.resizeTextarea(), e.updateIconOffset();
                                    });
                                }
                            },
                            methods: {
                                focus: function() {
                                    this.getInput().focus();
                                },
                                blur: function() {
                                    this.getInput().blur();
                                },
                                getMigratingConfig: function() {
                                    return {
                                        props: {
                                            icon: "icon is removed, use suffix-icon / prefix-icon instead.",
                                            "on-icon-click": "on-icon-click is removed."
                                        },
                                        events: {
                                            click: "click is removed."
                                        }
                                    };
                                },
                                handleBlur: function(e) {
                                    this.focused = false, this.$emit("blur", e), this.validateEvent && this.dispatch("ElFormItem", "el.form.blur", [this.value]);
                                },
                                select: function() {
                                    this.getInput().select();
                                },
                                resizeTextarea: function() {
                                    if (!this.$isServer) {
                                        var e = this.autosize,
                                            t = this.type;
                                        if ("textarea" === t)
                                            if (e) {
                                                var n = e.minRows,
                                                    i = e.maxRows;
                                                this.textareaCalcStyle = f(this.$refs.textarea, n, i);
                                            } else this.textareaCalcStyle = {
                                                minHeight: f(this.$refs.textarea).minHeight
                                            };
                                    }
                                },
                                setNativeInputValue: function() {
                                    var e = this.getInput();
                                    e && e.value !== this.nativeInputValue && (e.value = this.nativeInputValue);
                                },
                                handleFocus: function(e) {
                                    this.focused = true, this.$emit("focus", e);
                                },
                                handleCompositionStart: function() {
                                    this.isComposing = true;
                                },
                                handleCompositionUpdate: function(e) {
                                    var t = e.target.value,
                                        n = t[t.length - 1] || "";
                                    this.isComposing = !Object(g.isKorean)(n);
                                },
                                handleCompositionEnd: function(e) {
                                    this.isComposing && (this.isComposing = false, this.handleInput(e));
                                },
                                handleInput: function(e) {
                                    this.isComposing || e.target.value !== this.nativeInputValue && (this.$emit("input", e.target.value), this.$nextTick(this.setNativeInputValue));
                                },
                                handleChange: function(e) {
                                    this.$emit("change", e.target.value);
                                },
                                calcIconOffset: function(e) {
                                    var t = [].slice.call(this.$el.querySelectorAll(".el-input__" + e) || []);
                                    if (t.length) {
                                        for (var n = null, i = 0; i < t.length; i++)
                                            if (t[i].parentNode === this.$el) {
                                                n = t[i];
                                                break;
                                            }
                                        if (n) {
                                            var o = {
                                                    suffix: "append",
                                                    prefix: "prepend"
                                                },
                                                r = o[e];
                                            this.$slots[r] ? n.style.transform = "translateX(" + ("suffix" === e ? "-" : "") + this.$el.querySelector(".el-input-group__" + r).offsetWidth + "px)" : n.removeAttribute("style");
                                        }
                                    }
                                },
                                updateIconOffset: function() {
                                    this.calcIconOffset("prefix"), this.calcIconOffset("suffix");
                                },
                                clear: function() {
                                    this.$emit("input", ""), this.$emit("change", ""), this.$emit("clear");
                                },
                                handlePasswordVisible: function() {
                                    var e = this;
                                    this.passwordVisible = !this.passwordVisible, this.$nextTick(function() {
                                        e.focus();
                                    });
                                },
                                getInput: function() {
                                    return this.$refs.input || this.$refs.textarea;
                                },
                                getSuffixVisible: function() {
                                    return this.$slots.suffix || this.suffixIcon || this.showClear || this.showPassword || this.isWordLimitVisible || this.validateState && this.needStatusIcon;
                                }
                            },
                            created: function() {
                                this.$on("inputSelect", this.select);
                            },
                            mounted: function() {
                                this.setNativeInputValue(), this.resizeTextarea(), this.updateIconOffset();
                            },
                            updated: function() {
                                this.$nextTick(this.updateIconOffset);
                            }
                        },
                        b = v,
                        y = n(0),
                        w = Object(y.a)(b, i, o, false, null, null, null);
                    w.options.__file = "packages/input/src/input.vue";
                    var x = w.exports;
                    x.install = function(e) {
                        e.component(x.name, x);
                    };
                    t.default = x;
                },
                9: function(e, t) {
                    e.exports = n("7f4d");
                }
            });
        },
        f494: function(e, t, n) {
            var i = n("7037").default;
            n("a4d3"), n("e01a"), n("d3b7"), n("944a"), n("0c47"), n("23dc"), n("99af"), n("b0c0"), e.exports = function(e) {
                var t = {};

                function n(i) {
                    if (t[i]) return t[i].exports;
                    var o = t[i] = {
                        i: i,
                        l: false,
                        exports: {}
                    };
                    return e[i].call(o.exports, o, o.exports, n), o.l = true, o.exports;
                }
                return n.m = e, n.c = t, n.d = function(e, t, i) {
                    n.o(e, t) || Object.defineProperty(e, t, {
                        enumerable: true,
                        get: i
                    });
                }, n.r = function(e) {
                    "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                        value: "Module"
                    }), Object.defineProperty(e, "__esModule", {
                        value: true
                    });
                }, n.t = function(e, t) {
                    if (1 & t && (e = n(e)), 8 & t) return e;
                    if (4 & t && "object" === i(e) && e && e.__esModule) return e;
                    var o = Object.create(null);
                    if (n.r(o), Object.defineProperty(o, "default", {
                            enumerable: true,
                            value: e
                        }), 2 & t && "string" != typeof e)
                        for (var r in e) n.d(o, r, function(t) {
                            return e[t];
                        }.bind(null, r));
                    return o;
                }, n.n = function(e) {
                    var t = e && e.__esModule ? function() {
                        return e.default;
                    } : function() {
                        return e;
                    };
                    return n.d(t, "a", t), t;
                }, n.o = function(e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t);
                }, n.p = "/dist/", n(n.s = 108);
            }({
                0: function(e, t, n) {
                    "use strict";

                    function i(e, t, n, i, o, r, s, a) {
                        var l, c = "function" === typeof e ? e.options : e;
                        if (t && (c.render = t, c.staticRenderFns = n, c._compiled = true), i && (c.functional = true), r && (c._scopeId = "data-v-" + r), s ? (l = function(e) {
                                e = e || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, e || "undefined" === typeof __VUE_SSR_CONTEXT__ || (e = __VUE_SSR_CONTEXT__), o && o.call(this, e), e && e._registeredComponents && e._registeredComponents.add(s);
                            }, c._ssrRegister = l) : o && (l = a ? function() {
                                o.call(this, this.$root.$options.shadowRoot);
                            } : o), l)
                            if (c.functional) {
                                c._injectStyles = l;
                                var u = c.render;
                                c.render = function(e, t) {
                                    return l.call(t), u(e, t);
                                };
                            } else {
                                var d = c.beforeCreate;
                                c.beforeCreate = d ? [].concat(d, l) : [l];
                            }
                        return {
                            exports: e,
                            options: c
                        };
                    }
                    n.d(t, "a", function() {
                        return i;
                    });
                },
                108: function(e, t, n) {
                    "use strict";
                    n.r(t);
                    var i = function() {
                            var e = this,
                                t = e.$createElement,
                                n = e._self._c || t;
                            return n("label", {
                                staticClass: "el-radio",
                                class: [e.border && e.radioSize ? "el-radio--" + e.radioSize : "", {
                                    "is-disabled": e.isDisabled
                                }, {
                                    "is-focus": e.focus
                                }, {
                                    "is-bordered": e.border
                                }, {
                                    "is-checked": e.model === e.label
                                }],
                                attrs: {
                                    role: "radio",
                                    "aria-checked": e.model === e.label,
                                    "aria-disabled": e.isDisabled,
                                    tabindex: e.tabIndex
                                },
                                on: {
                                    keydown: function(t) {
                                        if (!("button" in t) && e._k(t.keyCode, "space", 32, t.key, [" ", "Spacebar"])) return null;
                                        t.stopPropagation(), t.preventDefault(), e.model = e.isDisabled ? e.model : e.label;
                                    }
                                }
                            }, [n("span", {
                                staticClass: "el-radio__input",
                                class: {
                                    "is-disabled": e.isDisabled,
                                    "is-checked": e.model === e.label
                                }
                            }, [n("span", {
                                staticClass: "el-radio__inner"
                            }), n("input", {
                                directives: [{
                                    name: "model",
                                    rawName: "v-model",
                                    value: e.model,
                                    expression: "model"
                                }],
                                ref: "radio",
                                staticClass: "el-radio__original",
                                attrs: {
                                    type: "radio",
                                    "aria-hidden": "true",
                                    name: e.name,
                                    disabled: e.isDisabled,
                                    tabindex: "-1",
                                    autocomplete: "off"
                                },
                                domProps: {
                                    value: e.label,
                                    checked: e._q(e.model, e.label)
                                },
                                on: {
                                    focus: function(t) {
                                        e.focus = true;
                                    },
                                    blur: function(t) {
                                        e.focus = false;
                                    },
                                    change: [function(t) {
                                        e.model = e.label;
                                    }, e.handleChange]
                                }
                            })]), n("span", {
                                staticClass: "el-radio__label",
                                on: {
                                    keydown: function(e) {
                                        e.stopPropagation();
                                    }
                                }
                            }, [e._t("default"), e.$slots.default ? e._e() : [e._v(e._s(e.label))]], 2)]);
                        },
                        o = [];
                    i._withStripped = true;
                    var r = n(4),
                        s = n.n(r),
                        a = {
                            name: "ElRadio",
                            mixins: [s.a],
                            inject: {
                                elForm: {
                                    default: ""
                                },
                                elFormItem: {
                                    default: ""
                                }
                            },
                            componentName: "ElRadio",
                            props: {
                                value: {},
                                label: {},
                                disabled: Boolean,
                                name: String,
                                border: Boolean,
                                size: String
                            },
                            data: function() {
                                return {
                                    focus: false
                                };
                            },
                            computed: {
                                isGroup: function() {
                                    var e = this.$parent;
                                    while (e) {
                                        if ("ElRadioGroup" === e.$options.componentName) return this._radioGroup = e, true;
                                        e = e.$parent;
                                    }
                                    return false;
                                },
                                model: {
                                    get: function() {
                                        return this.isGroup ? this._radioGroup.value : this.value;
                                    },
                                    set: function(e) {
                                        this.isGroup ? this.dispatch("ElRadioGroup", "input", [e]) : this.$emit("input", e), this.$refs.radio && (this.$refs.radio.checked = this.model === this.label);
                                    }
                                },
                                _elFormItemSize: function() {
                                    return (this.elFormItem || {}).elFormItemSize;
                                },
                                radioSize: function() {
                                    var e = this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;
                                    return this.isGroup && this._radioGroup.radioGroupSize || e;
                                },
                                isDisabled: function() {
                                    return this.isGroup ? this._radioGroup.disabled || this.disabled || (this.elForm || {}).disabled : this.disabled || (this.elForm || {}).disabled;
                                },
                                tabIndex: function() {
                                    return this.isDisabled || this.isGroup && this.model !== this.label ? -1 : 0;
                                }
                            },
                            methods: {
                                handleChange: function() {
                                    var e = this;
                                    this.$nextTick(function() {
                                        e.$emit("change", e.model), e.isGroup && e.dispatch("ElRadioGroup", "handleChange", e.model);
                                    });
                                }
                            }
                        },
                        l = a,
                        c = n(0),
                        u = Object(c.a)(l, i, o, false, null, null, null);
                    u.options.__file = "packages/radio/src/radio.vue";
                    var d = u.exports;
                    d.install = function(e) {
                        e.component(d.name, d);
                    };
                    t.default = d;
                },
                4: function(e, t) {
                    e.exports = n("d010");
                }
            });
        },
        f4a6: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("el-form-item", {
                        attrs: {
                            label: "onFocus",
                            "label-width": "150px"
                        }
                    }, [n("el-button", {
                        attrs: {
                            type: "info",
                            icon: "el-icon-edit",
                            plain: "",
                            round: ""
                        },
                        on: {
                            click: function(t) {
                                return e.editEventHandler("onFocus", e.eventParams);
                            }
                        }
                    }, [e._v(" " + e._s(e.i18nt("designer.setting.addEventHandler")))])], 1);
                },
                o = [],
                r = n("79fa"),
                s = n("7d6c"),
                a = {
                    name: "onFocus-editor",
                    mixins: [r.b, s.a],
                    props: {
                        designer: Object,
                        selectedWidget: Object,
                        optionModel: Object
                    },
                    data: function() {
                        return {
                            eventParams: ["event"]
                        };
                    }
                },
                l = a,
                c = n("2877"),
                u = Object(c.a)(l, i, o, false, null, "ccd01010", null);
            t.default = u.exports;
        },
        f4c1: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("form-item-wrapper", {
                        attrs: {
                            designer: e.designer,
                            field: e.field,
                            rules: e.rules,
                            "design-state": e.designState,
                            "parent-widget": e.parentWidget,
                            "parent-list": e.parentList,
                            "index-of-parent-list": e.indexOfParentList,
                            "sub-form-row-index": e.subFormRowIndex,
                            "sub-form-col-index": e.subFormColIndex,
                            "sub-form-row-id": e.subFormRowId
                        }
                    }, [n("vue-editor", {
                        ref: "fieldEditor",
                        attrs: {
                            "editor-toolbar": e.customToolbar,
                            disabled: e.field.options.disabled,
                            placeholder: e.field.options.placeholder
                        },
                        on: {
                            "text-change": e.handleRichEditorChangeEvent,
                            focus: e.handleRichEditorFocusEvent,
                            blur: e.handleRichEditorBlurEvent
                        },
                        model: {
                            value: e.fieldModel,
                            callback: function(t) {
                                e.fieldModel = t;
                            },
                            expression: "fieldModel"
                        }
                    })], 1);
                },
                o = [],
                r = (n("a9e3"), n("9eeb")),
                s = n("5873"),
                a = n("c6e3"),
                l = n("79fa"),
                c = n("ca00"),
                u = n("2d11"),
                d = {
                    name: "rich-editor-widget",
                    componentName: "FieldWidget",
                    mixins: [a.a, u.a, l.b],
                    props: {
                        field: Object,
                        parentWidget: Object,
                        parentList: Array,
                        indexOfParentList: Number,
                        designer: Object,
                        designState: {
                            type: Boolean,
                            default: false
                        },
                        subFormRowIndex: {
                            type: Number,
                            default: -1
                        },
                        subFormColIndex: {
                            type: Number,
                            default: -1
                        },
                        subFormRowId: {
                            type: String,
                            default: ""
                        }
                    },
                    components: {
                        FormItemWrapper: r.default,
                        VueEditor: s.a
                    },
                    inject: ["refList", "formConfig", "globalOptionData", "globalModel"],
                    data: function() {
                        return {
                            oldFieldValue: null,
                            fieldModel: null,
                            rules: [],
                            customToolbar: [],
                            valueChangedFlag: false
                        };
                    },
                    computed: {},
                    beforeCreate: function() {},
                    created: function() {
                        this.initFieldModel(), this.registerToRefList(), this.initEventHandler(), this.buildFieldRules(), this.handleOnCreated();
                    },
                    mounted: function() {
                        this.handleOnMounted();
                    },
                    beforeDestroy: function() {
                        this.unregisterFromRefList();
                    },
                    methods: {
                        handleRichEditorChangeEvent: function() {
                            this.valueChangedFlag = true, this.syncUpdateFormModel(this.fieldModel);
                        },
                        handleRichEditorFocusEvent: function() {
                            this.oldFieldValue = Object(c.d)(this.fieldModel);
                        },
                        handleRichEditorBlurEvent: function() {
                            this.valueChangedFlag && (this.emitFieldDataChange(this.fieldModel, this.oldFieldValue), this.valueChangedFlag = false);
                        }
                    }
                },
                h = d,
                f = (n("f8e7"), n("2877")),
                p = Object(f.a)(h, i, o, false, null, "29731672", null);
            t.default = p.exports;
        },
        f582: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = n("e017"),
                o = n.n(i),
                r = n("21a1"),
                s = n.n(r),
                a = new o.a({
                    id: "icon-checkbox-field",
                    use: "icon-checkbox-field-usage",
                    viewBox: "0 0 1024 1024",
                    content: '<symbol class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="icon-checkbox-field"><defs><style type="text/css"></style></defs><path d="M897.940444 896.76927c6.258541-6.27696 10.256598-14.833847 10.256598-24.530696L908.197042 147.672294c0-9.118682-3.998057-18.235316-10.256598-24.533766l0 0c-6.27696-6.257517-14.815427-9.695826-24.511253-9.695826l0 0-723.784474 0 0 0c-9.68764 0-18.235316 3.437286-24.503067 9.695826l0 0c-6.26775 6.297426-9.686616 15.414061-9.686616 24.533766L115.455033 872.238574c0 9.69685 3.419889 18.253736 9.686616 24.530696 6.26775 6.277984 14.815427 10.276041 24.503067 10.276041l0 0 723.784474 0 0 0C883.126041 907.045311 891.663484 903.047254 897.940444 896.76927L897.940444 896.76927zM149.644717 61.521169l723.784474 0 0 0c23.933085 0 45.586245 9.69685 60.97984 25.110911 15.396665 15.97381 25.073048 37.665855 25.073048 61.039191L959.482079 872.238574c0 23.969924-9.676383 45.64355-25.073048 61.056588l0 0c-15.393595 15.395642-37.046754 25.092491-60.97984 25.092491l0 0-723.784474 0 0 0c-23.364127 0-45.016263-9.69685-60.971653-25.092491l0 0c-15.395642-15.414061-25.082258-37.086663-25.082258-61.056588L63.590805 147.672294c0-23.37436 9.686616-45.065382 25.082258-61.039191l0 0C104.628454 71.218018 126.28059 61.521169 149.644717 61.521169L149.644717 61.521169z" p-id="25736" /><path d="M417.41939 698.269357c-6.025227 0-12.047384-2.301416-16.667611-6.89913L259.500731 550.119179c-9.172917-9.148357-9.172917-24.093744 0-33.290197 9.169847-9.147334 24.115234-9.147334 33.288151 0l124.583436 124.606972 312.89429-312.916802c9.194406-9.171893 24.139793-9.171893 33.288151 0 9.196453 9.171893 9.196453 24.116257 0 33.289174L433.991834 691.370227c-4.618181 4.644787-10.642384 6.89913-16.665565 6.89913L417.41939 698.269357z" p-id="25737" /></symbol>'
                });
            s.a.add(a);
            t.default = a;
        },
        f584: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("el-form-item", [n("span", {
                        attrs: {
                            slot: "label"
                        },
                        slot: "label"
                    }, [e._v(e._s(e.i18nt("designer.setting.fileTypes")) + " "), n("el-tooltip", {
                        attrs: {
                            effect: "light",
                            content: e.i18nt("designer.setting.fileTypesHelp")
                        }
                    }, [n("i", {
                        staticClass: "el-icon-info"
                    })])], 1), n("el-select", {
                        staticStyle: {
                            width: "100%"
                        },
                        attrs: {
                            multiple: "",
                            "allow-create": "",
                            filterable: "",
                            "default-first-option": ""
                        },
                        model: {
                            value: e.optionModel.fileTypes,
                            callback: function(t) {
                                e.$set(e.optionModel, "fileTypes", t);
                            },
                            expression: "optionModel.fileTypes"
                        }
                    }, e._l(e.uploadFileTypes, function(e, t) {
                        return n("el-option", {
                            key: t,
                            attrs: {
                                label: e.label,
                                value: e.value
                            }
                        });
                    }), 1)], 1);
                },
                o = [],
                r = n("79fa"),
                s = {
                    name: "file-upload-fileTypes-editor",
                    mixins: [r.b],
                    props: {
                        designer: Object,
                        selectedWidget: Object,
                        optionModel: Object
                    },
                    data: function() {
                        return {
                            uploadFileTypes: [{
                                value: "doc",
                                label: "doc"
                            }, {
                                value: "xls",
                                label: "xls"
                            }, {
                                value: "docx",
                                label: "docx"
                            }, {
                                value: "xlsx",
                                label: "xlsx"
                            }]
                        };
                    }
                },
                a = s,
                l = n("2877"),
                c = Object(l.a)(a, i, o, false, null, "68a1d928", null);
            t.default = c.exports;
        },
        f5df: function(e, t, n) {
            var i = n("da84"),
                o = n("00ee"),
                r = n("1626"),
                s = n("c6b6"),
                a = n("b622"),
                l = a("toStringTag"),
                c = i.Object,
                u = "Arguments" == s(function() {
                    return arguments;
                }()),
                d = function(e, t) {
                    try {
                        return e[t];
                    } catch (n) {}
                };
            e.exports = o ? s : function(e) {
                var t, n, i;
                return undefined === e ? "Undefined" : null === e ? "Null" : "string" == typeof(n = d(t = c(e), l)) ? n : u ? s(t) : "Object" == (i = s(t)) && r(t.callee) ? "Arguments" : i;
            };
        },
        f6b4: function(e, t, n) {
            "use strict";
            var i = n("c532");

            function o() {
                this.handlers = [];
            }
            o.prototype.use = function(e, t, n) {
                return this.handlers.push({
                    fulfilled: e,
                    rejected: t,
                    synchronous: !!n && n.synchronous,
                    runWhen: n ? n.runWhen : null
                }), this.handlers.length - 1;
            }, o.prototype.eject = function(e) {
                this.handlers[e] && (this.handlers[e] = null);
            }, o.prototype.forEach = function(e) {
                i.forEach(this.handlers, function(t) {
                    null !== t && e(t);
                });
            }, e.exports = o;
        },
        f6e6: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("container-wrapper", {
                        attrs: {
                            designer: e.designer,
                            widget: e.widget,
                            "parent-widget": e.parentWidget,
                            "parent-list": e.parentList,
                            "index-of-parent-list": e.indexOfParentList
                        }
                    }, [n("div", {
                        key: e.widget.id,
                        staticClass: "table-container",
                        class: [e.selected ? "selected" : "", e.customClass],
                        on: {
                            click: function(t) {
                                return t.stopPropagation(), e.selectWidget(e.widget);
                            }
                        }
                    }, [n("table", {
                        staticClass: "table-layout"
                    }, [n("tbody", e._l(e.widget.rows, function(t, i) {
                        return n("tr", {
                            key: t.id
                        }, [e._l(t.cols, function(o, r) {
                            return [o.merged ? e._e() : n("table-cell-widget", {
                                key: o.id,
                                attrs: {
                                    widget: o,
                                    designer: e.designer,
                                    "parent-list": e.widget.cols,
                                    "row-index": i,
                                    "row-length": e.widget.rows.length,
                                    "col-index": r,
                                    "col-length": t.cols.length,
                                    "col-array": t.cols,
                                    "row-array": e.widget.rows,
                                    "parent-widget": e.widget
                                }
                            })];
                        })], 2);
                    }), 0)])])]);
                },
                o = [],
                r = (n("a9e3"), n("79fa")),
                s = n("61ca"),
                a = n("cd36"),
                l = n("1516"),
                c = n("26a6"),
                u = {
                    name: "table-widget",
                    componentName: "ContainerWidget",
                    mixins: [r.b, s.a, c.a],
                    inject: ["refList"],
                    components: {
                        ContainerWrapper: a.default,
                        TableCellWidget: l.default
                    },
                    props: {
                        widget: Object,
                        parentWidget: Object,
                        parentList: Array,
                        indexOfParentList: Number,
                        designer: Object
                    },
                    computed: {
                        selected: function() {
                            return this.widget.id === this.designer.selectedId;
                        },
                        customClass: function() {
                            return this.widget.options.customClass || "";
                        }
                    },
                    watch: {},
                    created: function() {
                        this.initRefList();
                    },
                    mounted: function() {},
                    methods: {}
                },
                d = u,
                h = (n("5479"), n("2877")),
                f = Object(h.a)(d, i, o, false, null, "37d3c0b7", null);
            t.default = f.exports;
        },
        f6f1: function(e, t, n) {},
        f746: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("container-item-wrapper", {
                        attrs: {
                            widget: e.widget
                        }
                    }, [n("el-row", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: !e.widget.options.hidden,
                            expression: "!widget.options.hidden"
                        }],
                        key: e.widget.id,
                        ref: e.widget.id,
                        staticClass: "grid-container",
                        class: [e.customClass],
                        attrs: {
                            gutter: e.widget.options.gutter
                        }
                    }, [e._l(e.widget.cols, function(t, i) {
                        return [n("grid-col-item", {
                            key: i,
                            attrs: {
                                widget: t,
                                "parent-list": e.widget.cols,
                                "index-of-parent-list": i,
                                "parent-widget": e.widget,
                                "col-height": e.widget.options.colHeight
                            },
                            scopedSlots: e._u([e._l(Object.keys(e.$scopedSlots), function(t) {
                                return {
                                    key: t,
                                    fn: function(n) {
                                        return [e._t(t, null, null, n)];
                                    }
                                };
                            })], null, true)
                        })];
                    })], 2)], 1);
                },
                o = [],
                r = n("c6e3"),
                s = n("79fa"),
                a = n("d67f"),
                l = n("90c2"),
                c = n("a93f"),
                u = n("34f0"),
                d = {
                    name: "vf-grid-item",
                    componentName: "ContainerItem",
                    mixins: [r.a, s.b, a.a, u.a],
                    components: {
                        ContainerItemWrapper: l.default,
                        GridColItem: c.default
                    },
                    props: {
                        widget: Object
                    },
                    inject: ["refList", "sfRefList", "globalModel"],
                    created: function() {
                        this.initRefList();
                    },
                    mounted: function() {},
                    beforeDestroy: function() {
                        this.unregisterFromRefList();
                    },
                    methods: {}
                },
                h = d,
                f = n("2877"),
                p = Object(f.a)(h, i, o, false, null, "7382a44f", null);
            t.default = p.exports;
        },
        f772: function(e, t, n) {
            var i = n("5692"),
                o = n("90e3"),
                r = i("keys");
            e.exports = function(e) {
                return r[e] || (r[e] = o(e));
            };
        },
        f7729: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return "grid-col" === e.widget.type ? n("el-col", e._b({
                        key: e.widget.id,
                        staticClass: "grid-cell",
                        class: [e.selected ? "selected" : "", e.customClass],
                        style: e.colHeightStyle,
                        nativeOn: {
                            click: function(t) {
                                return t.stopPropagation(), e.selectWidget(e.widget);
                            }
                        }
                    }, "el-col", e.layoutProps, false), [n("draggable", e._b({
                        attrs: {
                            list: e.widget.widgetList,
                            handle: ".drag-handler",
                            move: e.checkContainerMove
                        },
                        on: {
                            end: function(t) {
                                return e.onGridDragEnd(t, e.widget.widgetList);
                            },
                            add: function(t) {
                                return e.onGridDragAdd(t, e.widget.widgetList);
                            },
                            update: e.onGridDragUpdate
                        }
                    }, "draggable", {
                        group: "dragGroup",
                        ghostClass: "ghost",
                        animation: 200
                    }, false), [n("transition-group", {
                        staticClass: "form-widget-list",
                        attrs: {
                            name: "fade",
                            tag: "div"
                        }
                    }, [e._l(e.widget.widgetList, function(t, i) {
                        return ["container" === t.category ? [n(t.type + "-widget", {
                            key: t.id,
                            tag: "component",
                            attrs: {
                                widget: t,
                                designer: e.designer,
                                "parent-list": e.widget.widgetList,
                                "index-of-parent-list": i,
                                "parent-widget": e.widget
                            }
                        })] : [n(t.type + "-widget", {
                            key: t.id,
                            tag: "component",
                            attrs: {
                                field: t,
                                designer: e.designer,
                                "parent-list": e.widget.widgetList,
                                "index-of-parent-list": i,
                                "parent-widget": e.widget,
                                "design-state": true
                            }
                        })]];
                    })], 2)], 1), e.designer.selectedId === e.widget.id && "grid-col" === e.widget.type ? n("div", {
                        staticClass: "grid-col-action"
                    }, [n("i", {
                        staticClass: "el-icon-back",
                        attrs: {
                            title: e.i18nt("designer.hint.selectParentWidget")
                        },
                        on: {
                            click: function(t) {
                                return t.stopPropagation(), e.selectParentWidget(e.widget);
                            }
                        }
                    }), e.parentList && e.parentList.length > 1 ? n("i", {
                        staticClass: "el-icon-top",
                        attrs: {
                            title: e.i18nt("designer.hint.moveUpWidget")
                        },
                        on: {
                            click: function(t) {
                                return t.stopPropagation(), e.moveUpWidget();
                            }
                        }
                    }) : e._e(), e.parentList && e.parentList.length > 1 ? n("i", {
                        staticClass: "el-icon-bottom",
                        attrs: {
                            title: e.i18nt("designer.hint.moveDownWidget")
                        },
                        on: {
                            click: function(t) {
                                return t.stopPropagation(), e.moveDownWidget();
                            }
                        }
                    }) : e._e(), n("i", {
                        staticClass: "el-icon-copy-document",
                        attrs: {
                            title: e.i18nt("designer.hint.cloneWidget")
                        },
                        on: {
                            click: function(t) {
                                return t.stopPropagation(), e.cloneGridCol(e.widget);
                            }
                        }
                    }), n("i", {
                        staticClass: "el-icon-delete",
                        attrs: {
                            title: e.i18nt("designer.hint.remove")
                        },
                        on: {
                            click: function(t) {
                                return t.stopPropagation(), e.removeWidget.apply(null, arguments);
                            }
                        }
                    })]) : e._e(), e.designer.selectedId === e.widget.id && "grid-col" === e.widget.type ? n("div", {
                        staticClass: "grid-col-handler"
                    }, [n("i", [e._v(e._s(e.i18nt("designer.widgetLabel." + e.widget.type)))])]) : e._e()], 1) : e._e();
                },
                o = [],
                r = n("5530"),
                s = (n("a9e3"), n("a434"), n("b76a")),
                a = n.n(s),
                l = n("79fa"),
                c = n("c029"),
                u = n("26a6"),
                d = {
                    name: "GridColWidget",
                    componentName: "GridColWidget",
                    mixins: [l.b, u.a],
                    inject: ["refList"],
                    components: Object(r.a)({
                        Draggable: a.a
                    }, c.a),
                    props: {
                        widget: Object,
                        parentWidget: Object,
                        parentList: Array,
                        indexOfParentList: Number,
                        designer: Object,
                        colHeight: {
                            type: String,
                            default: null
                        }
                    },
                    data: function() {
                        return {
                            layoutProps: {
                                span: this.widget.options.span || 12,
                                offset: this.widget.options.offset || 0,
                                push: this.widget.options.push || 0,
                                pull: this.widget.options.pull || 0
                            }
                        };
                    },
                    computed: {
                        selected: function() {
                            return this.widget.id === this.designer.selectedId;
                        },
                        customClass: function() {
                            return this.widget.options.customClass || "";
                        },
                        colHeightStyle: function() {
                            return this.colHeight ? {
                                height: this.colHeight + "px"
                            } : {};
                        }
                    },
                    watch: {
                        "designer.formConfig.layoutType": {
                            handler: function(e) {
                                this.widget.options.responsive ? this.layoutProps.span = "H5" === e ? this.widget.options.xs || 12 : "Pad" === e ? this.widget.options.sm || 12 : this.widget.options.md || 12 : this.layoutProps.span = this.widget.options.span || 12;
                            }
                        },
                        "widget.options.responsive": {
                            handler: function(e) {
                                var t = this.designer.formConfig.layoutType;
                                this.layoutProps.span = e ? "H5" === t ? this.widget.options.xs || 12 : "Pad" === t ? this.widget.options.sm || 12 : this.widget.options.md || 12 : this.widget.options.span || 12;
                            }
                        },
                        "widget.options.span": {
                            handler: function(e) {
                                this.layoutProps.span = e;
                            }
                        },
                        "widget.options.md": {
                            handler: function(e) {
                                this.layoutProps.span = e;
                            }
                        },
                        "widget.options.sm": {
                            handler: function(e) {
                                this.layoutProps.span = e;
                            }
                        },
                        "widget.options.xs": {
                            handler: function(e) {
                                this.layoutProps.span = e;
                            }
                        },
                        "widget.options.offset": {
                            handler: function(e) {
                                this.layoutProps.offset = e;
                            }
                        },
                        "widget.options.push": {
                            handler: function(e) {
                                this.layoutProps.push = e;
                            }
                        },
                        "widget.options.pull": {
                            handler: function(e) {
                                this.layoutProps.pull = e;
                            }
                        }
                    },
                    created: function() {
                        this.initRefList(), this.initLayoutProps();
                    },
                    methods: {
                        initLayoutProps: function() {
                            if (this.widget.options.responsive) {
                                var e = this.designer.formConfig.layoutType;
                                this.layoutProps.span = "H5" === e ? this.widget.options.xs || 12 : "Pad" === e ? this.widget.options.sm || 12 : this.widget.options.md || 12;
                            } else this.layoutProps.span = this.widget.options.span;
                        },
                        onGridDragEnd: function(e, t) {},
                        onGridDragAdd: function(e, t) {
                            var n = e.newIndex;
                            t[n] && this.designer.setSelected(t[n]), this.designer.emitHistoryChange(), this.designer.emitEvent("field-selected", this.widget);
                        },
                        onGridDragUpdate: function() {
                            this.designer.emitHistoryChange();
                        },
                        selectWidget: function(e) {
                            console.log("id: " + e.id), this.designer.setSelected(e);
                        },
                        checkContainerMove: function(e) {
                            return this.designer.checkWidgetMove(e);
                        },
                        selectParentWidget: function() {
                            this.parentWidget ? this.designer.setSelected(this.parentWidget) : this.designer.clearSelected();
                        },
                        moveUpWidget: function() {
                            this.designer.moveUpWidget(this.parentList, this.indexOfParentList);
                        },
                        moveDownWidget: function() {
                            this.designer.moveDownWidget(this.parentList, this.indexOfParentList);
                        },
                        cloneGridCol: function(e) {
                            this.designer.cloneGridCol(e, this.parentWidget);
                        },
                        removeWidget: function() {
                            var e = this;
                            if (this.parentList) {
                                var t = null;
                                1 === this.parentList.length ? this.parentWidget && (t = this.parentWidget) : t = this.parentList.length === 1 + this.indexOfParentList ? this.parentList[this.indexOfParentList - 1] : this.parentList[this.indexOfParentList + 1], this.$nextTick(function() {
                                    e.parentList.splice(e.indexOfParentList, 1), e.designer.setSelected(t), e.designer.emitHistoryChange();
                                });
                            }
                        }
                    }
                },
                h = d,
                f = (n("1415"), n("2877")),
                p = Object(f.a)(h, i, o, false, null, "3151e59a", null);
            t.default = p.exports;
        },
        f7be: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return e.noLabelSetting ? e._e() : n("el-form-item", {
                        attrs: {
                            label: e.i18nt("designer.setting.tableColumns")
                        }
                    }, [n("el-input", {
                        attrs: {
                            type: "text"
                        },
                        model: {
                            value: e.optionModel.tableColumns,
                            callback: function(t) {
                                e.$set(e.optionModel, "tableColumns", t);
                            },
                            expression: "optionModel.tableColumns"
                        }
                    })], 1);
                },
                o = [],
                r = n("79fa"),
                s = {
                    name: "tableColumns-editor",
                    mixins: [r.b],
                    props: {
                        designer: Object,
                        selectedWidget: Object,
                        optionModel: Object
                    },
                    computed: {
                        noLabelSetting: function() {
                            return "static-text" === this.selectedWidget.type || "html-text" === this.selectedWidget.type;
                        }
                    }
                },
                a = s,
                l = n("2877"),
                c = Object(l.a)(a, i, o, false, null, "1f0a9636", null);
            t.default = c.exports;
        },
        f893: function(e, t, n) {
            e.exports = {
                default: n("8119"),
                __esModule: true
            };
        },
        f8cd: function(e, t, n) {
            var i = n("da84"),
                o = n("5926"),
                r = i.RangeError;
            e.exports = function(e) {
                var t = o(e);
                if (t < 0) throw r("The argument can't be less than 0");
                return t;
            };
        },
        f8e7: function(e, t, n) {
            "use strict";
            n("e632");
        },
        fa85: function(e, t, n) {
            "use strict";
            n.r(t);
            var i = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("el-form-item", {
                        attrs: {
                            label: e.i18nt("designer.setting.colPushTitle")
                        }
                    }, [n("el-input-number", {
                        staticStyle: {
                            width: "100%"
                        },
                        attrs: {
                            min: 0,
                            max: 24
                        },
                        model: {
                            value: e.optionModel.push,
                            callback: function(t) {
                                e.$set(e.optionModel, "push", e._n(t));
                            },
                            expression: "optionModel.push"
                        }
                    })], 1);
                },
                o = [],
                r = n("79fa"),
                s = {
                    name: "grid-col-push-editor",
                    mixins: [r.b],
                    props: {
                        designer: Object,
                        selectedWidget: Object,
                        optionModel: Object
                    }
                },
                a = s,
                l = n("2877"),
                c = Object(l.a)(a, i, o, false, null, "570c4841", null);
            t.default = c.exports;
        },
        faf5: function(e, t, n) {
            e.exports = !n("0bad") && !n("4b8b")(function() {
                return 7 != Object.defineProperty(n("05f5")("div"), "a", {
                    get: function() {
                        return 7;
                    }
                }).a;
            });
        },
        fb15: function(e, t, n) {
            "use strict";
            if (n.r(t), "undefined" !== typeof window) {
                var i = window.document.currentScript,
                    o = n("8875");
                i = o(), "currentScript" in document || Object.defineProperty(document, "currentScript", {
                    get: o
                });
                var r = i && i.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);
                r && (n.p = r[1]);
            }
            n("b0c0"), n("d3b7"), n("159b");
            var s = n("bc3a"),
                a = n.n(s),
                l = function() {
                    var e = this,
                        t = e.$createElement,
                        i = e._self._c || t;
                    return i("el-container", {
                        staticClass: "main-container full-height"
                    }, [i("el-header", {
                        staticClass: "main-header"
                    }, [i("div", {
                        staticClass: "float-left main-title"
                    }, [i("img", {
                        attrs: {
                            src: n("d3fb")
                        },
                        on: {
                            click: e.openHome
                        }
                    }), i("span", {
                        staticClass: "bold"
                    }, [e._v("VForm")]), e._v(" " + e._s(e.i18nt("application.productTitle")) + " "), i("span", {
                        staticClass: "version-span"
                    }, [e._v("Ver " + e._s(e.vFormVersion))])]), i("div", {
                        staticClass: "float-right external-link"
                    }, [e.showLink("languageMenu") ? i("el-dropdown", {
                        attrs: {
                            "hide-timeout": 2e3
                        },
                        on: {
                            command: e.handleLanguageChanged
                        }
                    }, [i("span", {
                        staticClass: "el-dropdown-link"
                    }, [e._v(e._s(e.curLangName)), i("i", {
                        staticClass: "el-icon-arrow-down el-icon--right"
                    })]), i("el-dropdown-menu", {
                        attrs: {
                            slot: "dropdown"
                        },
                        slot: "dropdown"
                    }, [i("el-dropdown-item", {
                        attrs: {
                            command: "zh-CN"
                        }
                    }, [e._v(e._s(e.i18nt("application.zh-CN")))]), i("el-dropdown-item", {
                        attrs: {
                            command: "en-US"
                        }
                    }, [e._v(e._s(e.i18nt("application.en-US")))])], 1)], 1) : e._e(), e.showLink("externalLink") ? i("a", {
                        attrs: {
                            href: "javascript:void(0)",
                            target: "_blank"
                        },
                        on: {
                            click: function(t) {
                                return e.openUrl(t, e.gitUrl);
                            }
                        }
                    }, [i("svg-icon", {
                        attrs: {
                            "icon-class": "github"
                        }
                    }), e._v(e._s(e.i18nt("application.github")))], 1) : e._e(), e.showLink("externalLink") ? i("a", {
                        attrs: {
                            href: "javascript:void(0)",
                            target: "_blank"
                        },
                        on: {
                            click: function(t) {
                                return e.openUrl(t, e.docUrl);
                            }
                        }
                    }, [i("svg-icon", {
                        attrs: {
                            "icon-class": "document"
                        }
                    }), e._v(e._s(e.i18nt("application.document")))], 1) : e._e(), e.showLink("externalLink") ? i("a", {
                        attrs: {
                            href: "javascript:void(0)",
                            target: "_blank"
                        },
                        on: {
                            click: function(t) {
                                return e.openUrl(t, e.chatUrl);
                            }
                        }
                    }, [e._v(e._s(e.i18nt("application.qqGroup")))]) : e._e(), e.showLink("externalLink") ? i("a", {
                        attrs: {
                            href: "javascript:void(0)",
                            target: "_blank"
                        },
                        on: {
                            click: function(t) {
                                return e.openUrl(t, e.subScribeUrl);
                            }
                        }
                    }, [e._v(" " + e._s(e.i18nt("application.subscription"))), i("i", {
                        staticClass: "el-icon-top-right"
                    })]) : e._e()], 1)]), i("el-container", [i("el-aside", {
                        staticClass: "side-panel"
                    }, [i("widget-panel", {
                        attrs: {
                            designer: e.designer
                        }
                    })], 1), i("el-container", {
                        staticClass: "center-layout-container"
                    }, [i("el-header", {
                        staticClass: "toolbar-header"
                    }, [i("toolbar-panel", {
                        ref: "toolbarRef",
                        attrs: {
                            designer: e.designer,
                            "global-dsv": e.globalDsv
                        },
                        scopedSlots: e._u([e._l(e.$slots, function(t, n) {
                            return {
                                key: n,
                                fn: function() {
                                    return [e._t(n)];
                                },
                                proxy: true
                            };
                        })], null, true)
                    })], 1), i("el-main", {
                        staticClass: "form-widget-main"
                    }, [i("el-scrollbar", {
                        staticClass: "container-scroll-bar",
                        style: {
                            height: e.scrollerHeight
                        }
                    }, [i("v-form-widget", {
                        ref: "formRef",
                        attrs: {
                            designer: e.designer,
                            "form-config": e.designer.formConfig,
                            "global-dsv": e.globalDsv
                        }
                    })], 1)], 1)], 1), i("el-aside", [i("setting-panel", {
                        attrs: {
                            designer: e.designer,
                            "selected-widget": e.designer.selectedWidget,
                            "form-config": e.designer.formConfig,
                            "global-dsv": e.globalDsv
                        }
                    })], 1)], 1)], 1);
                },
                c = [],
                u = (n("a434"), function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("el-scrollbar", {
                        staticClass: "side-scroll-bar",
                        style: {
                            height: e.scrollerHeight
                        }
                    }, [n("div", {
                        staticClass: "panel-container"
                    }, [n("el-tabs", {
                        staticClass: "no-bottom-margin indent-left-margin",
                        model: {
                            value: e.firstTab,
                            callback: function(t) {
                                e.firstTab = t;
                            },
                            expression: "firstTab"
                        }
                    }, [n("el-tab-pane", {
                        attrs: {
                            name: "componentLib"
                        }
                    }, [n("span", {
                        attrs: {
                            slot: "label"
                        },
                        slot: "label"
                    }, [n("i", {
                        staticClass: "el-icon-set-up"
                    }), e._v(" " + e._s(e.i18nt("designer.componentLib")))]), n("el-collapse", {
                        staticClass: "widget-collapse",
                        model: {
                            value: e.activeNames,
                            callback: function(t) {
                                e.activeNames = t;
                            },
                            expression: "activeNames"
                        }
                    }, [n("el-collapse-item", {
                        attrs: {
                            name: "1",
                            title: e.i18nt("designer.containerTitle")
                        }
                    }, [n("draggable", {
                        attrs: {
                            tag: "ul",
                            list: e.containers,
                            group: {
                                name: "dragGroup",
                                pull: "clone",
                                put: false
                            },
                            clone: e.handleContainerWidgetClone,
                            "ghost-class": "ghost",
                            sort: false,
                            move: e.checkContainerMove
                        },
                        on: {
                            end: e.onContainerDragEnd
                        }
                    }, e._l(e.containers, function(t, i) {
                        return n("li", {
                            key: i,
                            staticClass: "container-widget-item",
                            attrs: {
                                title: t.displayName
                            },
                            on: {
                                dblclick: function(n) {
                                    return e.addContainerByDbClick(t);
                                }
                            }
                        }, [n("span", [n("svg-icon", {
                            attrs: {
                                "icon-class": t.icon,
                                "class-name": "color-svg-icon"
                            }
                        }), e._v(e._s(e.i18n2t("designer.widgetLabel." + t.type, "extension.widgetLabel." + t.type)))], 1)]);
                    }), 0)], 1), n("el-collapse-item", {
                        attrs: {
                            name: "2",
                            title: e.i18nt("designer.basicFieldTitle")
                        }
                    }, [n("draggable", {
                        attrs: {
                            tag: "ul",
                            list: e.basicFields,
                            group: {
                                name: "dragGroup",
                                pull: "clone",
                                put: false
                            },
                            move: e.checkFieldMove,
                            clone: e.handleFieldWidgetClone,
                            "ghost-class": "ghost",
                            sort: false
                        }
                    }, e._l(e.basicFields, function(t, i) {
                        return n("li", {
                            key: i,
                            staticClass: "field-widget-item",
                            attrs: {
                                title: t.displayName
                            },
                            on: {
                                dblclick: function(n) {
                                    return e.addFieldByDbClick(t);
                                }
                            }
                        }, [n("span", [n("svg-icon", {
                            attrs: {
                                "icon-class": t.icon,
                                "class-name": "color-svg-icon"
                            }
                        }), e._v(e._s(e.i18n2t("designer.widgetLabel." + t.type, "extension.widgetLabel." + t.type)))], 1)]);
                    }), 0)], 1), n("el-collapse-item", {
                        attrs: {
                            name: "3",
                            title: e.i18nt("designer.advancedFieldTitle")
                        }
                    }, [n("draggable", {
                        attrs: {
                            tag: "ul",
                            list: e.advancedFields,
                            group: {
                                name: "dragGroup",
                                pull: "clone",
                                put: false
                            },
                            move: e.checkFieldMove,
                            clone: e.handleFieldWidgetClone,
                            "ghost-class": "ghost",
                            sort: false
                        }
                    }, e._l(e.advancedFields, function(t, i) {
                        return n("li", {
                            key: i,
                            staticClass: "field-widget-item",
                            attrs: {
                                title: t.displayName
                            },
                            on: {
                                dblclick: function(n) {
                                    return e.addFieldByDbClick(t);
                                }
                            }
                        }, [n("span", [n("svg-icon", {
                            attrs: {
                                "icon-class": t.icon,
                                "class-name": "color-svg-icon"
                            }
                        }), e._v(e._s(e.i18n2t("designer.widgetLabel." + t.type, "extension.widgetLabel." + t.type)))], 1)]);
                    }), 0)], 1), n("el-collapse-item", {
                        attrs: {
                            name: "4",
                            title: e.i18nt("designer.customFieldTitle")
                        }
                    }, [n("draggable", {
                        attrs: {
                            tag: "ul",
                            list: e.customFields,
                            group: {
                                name: "dragGroup",
                                pull: "clone",
                                put: false
                            },
                            move: e.checkFieldMove,
                            clone: e.handleFieldWidgetClone,
                            "ghost-class": "ghost",
                            sort: false
                        }
                    }, e._l(e.customFields, function(t, i) {
                        return n("li", {
                            key: i,
                            staticClass: "field-widget-item",
                            attrs: {
                                title: t.displayName
                            },
                            on: {
                                dblclick: function(n) {
                                    return e.addFieldByDbClick(t);
                                }
                            }
                        }, [n("span", [n("svg-icon", {
                            attrs: {
                                "icon-class": t.icon,
                                "class-name": "color-svg-icon"
                            }
                        }), e._v(e._s(e.i18n2t("designer.widgetLabel." + t.type, "extension.widgetLabel." + t.type)))], 1)]);
                    }), 0)], 1)], 1)], 1), e.showFormTemplates() ? n("el-tab-pane", {
                        staticStyle: {
                            padding: "8px"
                        },
                        attrs: {
                            name: "formLib"
                        }
                    }, [n("span", {
                        attrs: {
                            slot: "label"
                        },
                        slot: "label"
                    }, [n("i", {
                        staticClass: "el-icon-c-scale-to-original"
                    }), e._v(" " + e._s(e.i18nt("designer.formLib")))]), e._l(e.formTemplates, function(t, i) {
                        return [n("el-card", {
                            key: i,
                            staticClass: "ft-card",
                            attrs: {
                                "bord-style": {
                                    padding: "0"
                                },
                                shadow: "hover"
                            }
                        }, [n("el-popover", {
                            attrs: {
                                placement: "right",
                                trigger: "hover"
                            }
                        }, [n("img", {
                            staticStyle: {
                                width: "200px"
                            },
                            attrs: {
                                slot: "reference",
                                src: t.imgUrl
                            },
                            slot: "reference"
                        }), n("img", {
                            staticStyle: {
                                height: "600px",
                                width: "720px"
                            },
                            attrs: {
                                src: t.imgUrl
                            }
                        })]), n("div", {
                            staticClass: "bottom clear-fix"
                        }, [n("span", {
                            staticClass: "ft-title"
                        }, [e._v("#" + e._s(i + 1) + " " + e._s(t.title))]), n("el-button", {
                            staticClass: "right-button",
                            attrs: {
                                type: "text"
                            },
                            on: {
                                click: function(n) {
                                    return e.loadFormTemplate(t.jsonUrl);
                                }
                            }
                        }, [e._v(" " + e._s(e.i18nt("designer.hint.loadFormTemplate")))])], 1)], 1)];
                    })], 2) : e._e()], 1)], 1)]);
                }),
                d = [],
                h = n("5530"),
                f = (n("4de4"), n("d81d"), n("b76a")),
                p = n.n(f),
                m = [{
                    type: "grid",
                    category: "container",
                    icon: "grid",
                    cols: [],
                    options: {
                        name: "",
                        hidden: false,
                        gutter: 12,
                        colHeight: null,
                        customClass: ""
                    }
                }, {
                    type: "table",
                    category: "container",
                    icon: "table",
                    rows: [],
                    options: {
                        name: "",
                        hidden: false,
                        customClass: ""
                    }
                }, {
                    type: "tab",
                    category: "container",
                    icon: "tab",
                    displayType: "border-card",
                    tabs: [],
                    options: {
                        name: "",
                        hidden: false,
                        customClass: ""
                    }
                }, {
                    type: "grid-col",
                    category: "container",
                    icon: "grid-col",
                    internal: true,
                    widgetList: [],
                    options: {
                        name: "",
                        hidden: false,
                        span: 12,
                        offset: 0,
                        push: 0,
                        pull: 0,
                        responsive: false,
                        md: 12,
                        sm: 12,
                        xs: 12,
                        customClass: ""
                    }
                }, {
                    type: "table-cell",
                    category: "container",
                    icon: "table-cell",
                    internal: true,
                    widgetList: [],
                    merged: false,
                    options: {
                        name: "",
                        cellWidth: "",
                        cellHeight: "",
                        colspan: 1,
                        rowspan: 1,
                        wordBreak: false,
                        customClass: ""
                    }
                }, {
                    type: "tab-pane",
                    category: "container",
                    icon: "tab-pane",
                    internal: true,
                    widgetList: [],
                    options: {
                        name: "",
                        label: "",
                        hidden: false,
                        active: false,
                        disabled: false,
                        customClass: ""
                    }
                }],
                g = [{
                    type: "input",
                    icon: "text-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        type: "text",
                        defaultValue: "",
                        placeholder: "",
                        columnWidth: "200px",
                        size: "",
                        labelWidth: null,
                        labelHidden: false,
                        readonly: false,
                        disabled: false,
                        hidden: false,
                        clearable: true,
                        showPassword: false,
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        minLength: null,
                        maxLength: null,
                        showWordLimit: false,
                        prefixIcon: "",
                        suffixIcon: "",
                        appendButton: false,
                        appendButtonDisabled: false,
                        buttonIcon: "el-icon-search",
                        onCreated: "",
                        onMounted: "",
                        onInput: "",
                        onChange: "",
                        onFocus: "",
                        onBlur: "",
                        onValidate: "",
                        onAppendButtonClick: ""
                    }
                }, {
                    type: "textarea",
                    icon: "textarea-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        rows: 3,
                        defaultValue: "",
                        placeholder: "",
                        columnWidth: "200px",
                        size: "",
                        labelWidth: null,
                        labelHidden: false,
                        readonly: false,
                        disabled: false,
                        hidden: false,
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        minLength: null,
                        maxLength: null,
                        showWordLimit: false,
                        onCreated: "",
                        onMounted: "",
                        onInput: "",
                        onChange: "",
                        onFocus: "",
                        onBlur: "",
                        onValidate: ""
                    }
                }, {
                    type: "number",
                    icon: "number-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        defaultValue: 0,
                        placeholder: "",
                        columnWidth: "200px",
                        size: "",
                        labelWidth: null,
                        labelHidden: false,
                        disabled: false,
                        hidden: false,
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        min: -1e11,
                        max: 1e11,
                        precision: 0,
                        step: 1,
                        controlsPosition: "right",
                        onCreated: "",
                        onMounted: "",
                        onChange: "",
                        onFocus: "",
                        onBlur: "",
                        onValidate: ""
                    }
                }, {
                    type: "radio",
                    icon: "radio-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        defaultValue: null,
                        columnWidth: "200px",
                        size: "",
                        displayStyle: "inline",
                        buttonStyle: false,
                        border: false,
                        labelWidth: null,
                        labelHidden: false,
                        disabled: false,
                        hidden: false,
                        optionItems: [{
                            label: "radio 1",
                            value: 1
                        }, {
                            label: "radio 2",
                            value: 2
                        }, {
                            label: "radio 3",
                            value: 3
                        }],
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        onCreated: "",
                        onMounted: "",
                        onChange: "",
                        onValidate: ""
                    }
                }, {
                    type: "checkbox",
                    icon: "checkbox-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        defaultValue: [],
                        columnWidth: "200px",
                        size: "",
                        displayStyle: "inline",
                        buttonStyle: false,
                        border: false,
                        labelWidth: null,
                        labelHidden: false,
                        disabled: false,
                        hidden: false,
                        optionItems: [{
                            label: "check 1",
                            value: 1
                        }, {
                            label: "check 2",
                            value: 2
                        }, {
                            label: "check 3",
                            value: 3
                        }],
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        onCreated: "",
                        onMounted: "",
                        onChange: "",
                        onValidate: ""
                    }
                }, {
                    type: "select",
                    icon: "select-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        defaultValue: "",
                        placeholder: "",
                        columnWidth: "200px",
                        size: "",
                        labelWidth: null,
                        labelHidden: false,
                        disabled: false,
                        hidden: false,
                        clearable: true,
                        filterable: false,
                        allowCreate: false,
                        remote: false,
                        automaticDropdown: false,
                        multiple: false,
                        multipleLimit: 0,
                        optionItems: [{
                            label: "select 1",
                            value: 1
                        }, {
                            label: "select 2",
                            value: 2
                        }, {
                            label: "select 3",
                            value: 3
                        }],
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        onCreated: "",
                        onMounted: "",
                        onRemoteQuery: "",
                        onChange: "",
                        onFocus: "",
                        onBlur: "",
                        onValidate: ""
                    }
                }, {
                    type: "time",
                    icon: "time-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        defaultValue: null,
                        placeholder: "",
                        columnWidth: "200px",
                        size: "",
                        labelWidth: null,
                        labelHidden: false,
                        readonly: false,
                        disabled: false,
                        hidden: false,
                        clearable: true,
                        editable: false,
                        format: "HH:mm:ss",
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        onCreated: "",
                        onMounted: "",
                        onChange: "",
                        onFocus: "",
                        onBlur: "",
                        onValidate: ""
                    }
                }, {
                    type: "time-range",
                    icon: "time-range-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        defaultValue: null,
                        startPlaceholder: "",
                        endPlaceholder: "",
                        columnWidth: "200px",
                        size: "",
                        labelWidth: null,
                        labelHidden: false,
                        readonly: false,
                        disabled: false,
                        hidden: false,
                        clearable: true,
                        editable: false,
                        format: "HH:mm:ss",
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        onCreated: "",
                        onMounted: "",
                        onChange: "",
                        onFocus: "",
                        onBlur: "",
                        onValidate: ""
                    }
                }, {
                    type: "date",
                    icon: "date-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        type: "date",
                        defaultValue: null,
                        placeholder: "",
                        columnWidth: "200px",
                        size: "",
                        labelWidth: null,
                        labelHidden: false,
                        readonly: false,
                        disabled: false,
                        hidden: false,
                        clearable: true,
                        editable: false,
                        format: "yyyy-MM-dd",
                        valueFormat: "yyyy-MM-dd",
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        onCreated: "",
                        onMounted: "",
                        onChange: "",
                        onFocus: "",
                        onBlur: "",
                        onValidate: ""
                    }
                }, {
                    type: "date-range",
                    icon: "date-range-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        type: "daterange",
                        defaultValue: null,
                        startPlaceholder: "",
                        endPlaceholder: "",
                        columnWidth: "200px",
                        size: "",
                        labelWidth: null,
                        labelHidden: false,
                        readonly: false,
                        disabled: false,
                        hidden: false,
                        clearable: true,
                        editable: false,
                        format: "yyyy-MM-dd",
                        valueFormat: "yyyy-MM-dd",
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        onCreated: "",
                        onMounted: "",
                        onChange: "",
                        onFocus: "",
                        onBlur: "",
                        onValidate: ""
                    }
                }, {
                    type: "switch",
                    icon: "switch-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        defaultValue: null,
                        columnWidth: "200px",
                        labelWidth: null,
                        labelHidden: false,
                        disabled: false,
                        hidden: false,
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        switchWidth: 40,
                        activeText: "",
                        inactiveText: "",
                        activeColor: null,
                        inactiveColor: null,
                        onCreated: "",
                        onMounted: "",
                        onChange: "",
                        onValidate: ""
                    }
                }, {
                    type: "rate",
                    icon: "rate-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        defaultValue: null,
                        columnWidth: "200px",
                        labelWidth: null,
                        labelHidden: false,
                        disabled: false,
                        hidden: false,
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        max: 5,
                        lowThreshold: 2,
                        highThreshold: 4,
                        allowHalf: false,
                        showText: false,
                        showScore: false,
                        onCreated: "",
                        onMounted: "",
                        onChange: "",
                        onValidate: ""
                    }
                }, {
                    type: "color",
                    icon: "color-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        defaultValue: null,
                        columnWidth: "200px",
                        size: "",
                        labelWidth: null,
                        labelHidden: false,
                        disabled: false,
                        hidden: false,
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        onCreated: "",
                        onMounted: "",
                        onChange: "",
                        onValidate: ""
                    }
                }, {
                    type: "slider",
                    icon: "slider-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        columnWidth: "200px",
                        showStops: true,
                        size: "",
                        labelWidth: null,
                        labelHidden: false,
                        disabled: false,
                        hidden: false,
                        required: false,
                        requiredHint: "",
                        validation: "",
                        validationHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        min: 0,
                        max: 100,
                        step: 10,
                        range: false,
                        height: null,
                        onCreated: "",
                        onMounted: "",
                        onChange: "",
                        onValidate: ""
                    }
                }, {
                    type: "static-text",
                    icon: "static-text",
                    formItemFlag: false,
                    options: {
                        name: "",
                        columnWidth: "200px",
                        hidden: false,
                        textContent: "static text",
                        textAlign: "left",
                        fontSize: "13px",
                        preWrap: false,
                        customClass: "",
                        onCreated: "",
                        onMounted: ""
                    }
                }, {
                    type: "html-text",
                    icon: "html-text",
                    formItemFlag: false,
                    options: {
                        name: "",
                        columnWidth: "200px",
                        hidden: false,
                        htmlContent: "<b>html text</b>",
                        customClass: "",
                        onCreated: "",
                        onMounted: ""
                    }
                }, {
                    type: "button",
                    icon: "button",
                    formItemFlag: false,
                    options: {
                        name: "",
                        label: "",
                        columnWidth: "200px",
                        size: "",
                        displayStyle: "block",
                        disabled: false,
                        hidden: false,
                        type: "",
                        plain: false,
                        round: false,
                        circle: false,
                        icon: null,
                        customClass: "",
                        onCreated: "",
                        onMounted: "",
                        onClick: ""
                    }
                }, {
                    type: "divider",
                    icon: "divider",
                    formItemFlag: false,
                    options: {
                        name: "",
                        label: "",
                        columnWidth: "200px",
                        direction: "horizontal",
                        contentPosition: "center",
                        hidden: false,
                        customClass: "",
                        onCreated: "",
                        onMounted: ""
                    }
                }],
                v = [{
                    type: "picture-upload",
                    icon: "picture-upload-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        labelWidth: null,
                        labelHidden: false,
                        columnWidth: "200px",
                        disabled: false,
                        hidden: false,
                        required: false,
                        requiredHint: "",
                        customRule: "",
                        customRuleHint: "",
                        uploadURL: "",
                        uploadTip: "",
                        withCredentials: false,
                        multipleSelect: false,
                        showFileList: true,
                        limit: 3,
                        fileMaxSize: 5,
                        fileTypes: ["jpg", "jpeg", "png"],
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        onCreated: "",
                        onMounted: "",
                        onBeforeUpload: "",
                        onUploadSuccess: "",
                        onUploadError: "",
                        onFileRemove: "",
                        onValidate: ""
                    }
                }, {
                    type: "file-upload",
                    icon: "file-upload-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        labelWidth: null,
                        labelHidden: false,
                        columnWidth: "200px",
                        disabled: false,
                        hidden: false,
                        required: false,
                        requiredHint: "",
                        customRule: "",
                        customRuleHint: "",
                        uploadURL: "",
                        uploadTip: "",
                        withCredentials: false,
                        multipleSelect: false,
                        showFileList: true,
                        limit: 3,
                        fileMaxSize: 5,
                        fileTypes: ["doc", "docx", "xls", "xlsx"],
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        onCreated: "",
                        onMounted: "",
                        onBeforeUpload: "",
                        onUploadSuccess: "",
                        onUploadError: "",
                        onFileRemove: "",
                        onValidate: ""
                    }
                }, {
                    type: "rich-editor",
                    icon: "rich-editor-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        placeholder: "",
                        labelWidth: null,
                        labelHidden: false,
                        columnWidth: "200px",
                        disabled: false,
                        hidden: false,
                        required: false,
                        requiredHint: "",
                        customRule: "",
                        customRuleHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        minLength: null,
                        maxLength: null,
                        showWordLimit: false,
                        onCreated: "",
                        onMounted: "",
                        onValidate: ""
                    }
                }, {
                    type: "cascader",
                    icon: "cascader-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        labelAlign: "",
                        defaultValue: "",
                        placeholder: "",
                        size: "",
                        labelWidth: null,
                        labelHidden: false,
                        columnWidth: "200px",
                        disabled: false,
                        hidden: false,
                        clearable: true,
                        filterable: false,
                        multiple: false,
                        checkStrictly: false,
                        showAllLevels: true,
                        optionItems: [{
                            label: "select 1",
                            value: 1,
                            children: [{
                                label: "child 1",
                                value: 11
                            }]
                        }, {
                            label: "select 2",
                            value: 2
                        }, {
                            label: "select 3",
                            value: 3
                        }],
                        required: false,
                        requiredHint: "",
                        customRule: "",
                        customRuleHint: "",
                        customClass: "",
                        labelIconClass: null,
                        labelIconPosition: "rear",
                        labelTooltip: null,
                        onCreated: "",
                        onMounted: "",
                        onChange: "",
                        onFocus: "",
                        onBlur: "",
                        onValidate: ""
                    }
                }, {
                    type: "slot",
                    icon: "slot-field",
                    formItemFlag: true,
                    options: {
                        name: "",
                        label: "",
                        hidden: false,
                        tableColumns: "",
                        addFormFields: "",
                        customClass: "",
                        onCreated: "",
                        onMounted: ""
                    }
                }],
                b = [];

            function y(e) {
                m.push(e);
            }

            function w(e) {
                b.push(e);
            }
            var x = [{
                    title: "单列表单",
                    imgUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/t1.png",
                    jsonUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/json1.txt",
                    description: "表单模板详细说明..."
                }, {
                    title: "多列表单",
                    imgUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/t2.png",
                    jsonUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/json2.txt",
                    description: "表单模板详细说明..."
                }, {
                    title: "分组表单",
                    imgUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/t3.png",
                    jsonUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/json3.txt",
                    description: "表单模板详细说明..."
                }, {
                    title: "标签页表单",
                    imgUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/t4.png",
                    jsonUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/json4.txt",
                    description: "表单模板详细说明..."
                }, {
                    title: "主从表单",
                    imgUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/t5.png",
                    jsonUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/json5.txt",
                    description: "表单模板详细说明..."
                }, {
                    title: "响应式表单",
                    imgUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/t6.png",
                    jsonUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/json6.txt",
                    description: "表单模板详细说明..."
                }, {
                    title: "问卷调查表",
                    imgUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/t7.png",
                    jsonUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/json7.txt",
                    description: "表单模板详细说明..."
                }, {
                    title: "固定表格表单",
                    imgUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/t8.png",
                    jsonUrl: "https://ks3-cn-beijing.ksyuncs.com/vform-static/form-samples/json8.txt",
                    description: "表单模板详细说明..."
                }],
                _ = n("ca00"),
                C = n("79fa"),
                k = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("svg", {
                        class: e.svgClass,
                        attrs: {
                            "aria-hidden": "true"
                        }
                    }, [n("use", {
                        attrs: {
                            "xlink:href": e.iconName
                        }
                    }), e.title ? n("title", [e._v(e._s(e.title))]) : e._e()]);
                },
                S = [],
                O = {
                    name: "SvgIcon",
                    props: {
                        iconClass: {
                            type: String,
                            required: true
                        },
                        className: {
                            type: String
                        },
                        title: {
                            type: String,
                            default: ""
                        }
                    },
                    computed: {
                        iconName: function() {
                            return "#icon-".concat(this.iconClass);
                        },
                        svgClass: function() {
                            return this.className ? "svg-icon " + this.className : "svg-icon";
                        }
                    }
                },
                E = O,
                $ = (n("d53b"), n("2877")),
                M = Object($.a)(E, k, S, false, null, "1a7581a2", null),
                T = M.exports,
                L = {
                    name: "FieldPanel",
                    mixins: [C.b],
                    components: {
                        Draggable: p.a,
                        SvgIcon: T
                    },
                    props: {
                        designer: Object
                    },
                    inject: ["getBannedWidgets", "getDesignerConfig"],
                    data: function() {
                        return {
                            designerConfig: this.getDesignerConfig(),
                            firstTab: "componentLib",
                            scrollerHeight: 0,
                            activeNames: ["1", "2", "3", "4"],
                            containers: m,
                            basicFields: g,
                            advancedFields: v,
                            customFields: b,
                            formTemplates: x
                        };
                    },
                    computed: {},
                    mounted: function() {
                        var e = this;
                        this.loadWidgets(), this.scrollerHeight = window.innerHeight - 56 + "px", Object(_.a)(function() {
                            e.$nextTick(function() {
                                e.scrollerHeight = window.innerHeight - 56 + "px";
                            });
                        });
                    },
                    methods: {
                        isBanned: function(e) {
                            return this.getBannedWidgets().indexOf(e) > -1;
                        },
                        showFormTemplates: function() {
                            return undefined === this.designerConfig.formTemplates || !!this.designerConfig.formTemplates;
                        },
                        loadWidgets: function() {
                            var e = this;
                            this.containers = this.containers.map(function(t) {
                                return Object(h.a)(Object(h.a)({}, t), {}, {
                                    displayName: e.i18n2t("designer.widgetLabel.".concat(t.type), "extension.widgetLabel.".concat(t.type))
                                });
                            }).filter(function(t) {
                                return !t.internal && !e.isBanned(t.type);
                            }), this.basicFields = this.basicFields.map(function(t) {
                                return Object(h.a)(Object(h.a)({}, t), {}, {
                                    displayName: e.i18n2t("designer.widgetLabel.".concat(t.type), "extension.widgetLabel.".concat(t.type))
                                });
                            }).filter(function(t) {
                                return !e.isBanned(t.type);
                            }), this.advancedFields = this.advancedFields.map(function(t) {
                                return Object(h.a)(Object(h.a)({}, t), {}, {
                                    displayName: e.i18n2t("designer.widgetLabel.".concat(t.type), "extension.widgetLabel.".concat(t.type))
                                });
                            }).filter(function(t) {
                                return !e.isBanned(t.type);
                            }), this.customFields = this.customFields.map(function(t) {
                                return Object(h.a)(Object(h.a)({}, t), {}, {
                                    displayName: e.i18n2t("designer.widgetLabel.".concat(t.type), "extension.widgetLabel.".concat(t.type))
                                });
                            }).filter(function(t) {
                                return !e.isBanned(t.type);
                            });
                        },
                        handleContainerWidgetClone: function(e) {
                            return this.designer.copyNewContainerWidget(e);
                        },
                        handleFieldWidgetClone: function(e) {
                            return this.designer.copyNewFieldWidget(e);
                        },
                        checkContainerMove: function(e) {
                            return this.designer.checkWidgetMove(e);
                        },
                        checkFieldMove: function(e) {
                            return this.designer.checkFieldMove(e);
                        },
                        onContainerDragEnd: function(e) {},
                        addContainerByDbClick: function(e) {
                            this.designer.addContainerByDbClick(e);
                        },
                        addFieldByDbClick: function(e) {
                            this.designer.addFieldByDbClick(e);
                        },
                        loadFormTemplate: function(e) {
                            var t = this;
                            this.$confirm(this.i18nt("designer.hint.loadFormTemplateHint"), this.i18nt("render.hint.prompt"), {
                                confirmButtonText: this.i18nt("render.hint.confirm"),
                                cancelButtonText: this.i18nt("render.hint.cancel")
                            }).then(function() {
                                a.a.get(e).then(function(e) {
                                    var n = false;
                                    "string" === typeof e.data ? n = t.designer.loadFormJson(JSON.parse(e.data)) : e.data.constructor === Object && (n = t.designer.loadFormJson(e.data)), n && t.designer.emitHistoryChange(), t.$message.success(t.i18nt("designer.hint.loadFormTemplateSuccess"));
                                }).catch(function(e) {
                                    t.$message.error(t.i18nt("designer.hint.loadFormTemplateFailed") + ":" + e);
                                });
                            }).catch(function(e) {
                                console.error(e);
                            });
                        }
                    }
                },
                A = L,
                D = (n("6425"), Object($.a)(A, u, d, false, null, "7c54b0c6", null)),
                F = D.exports,
                R = function() {
                    var e = this,
                        t = e.$createElement,
                        n = e._self._c || t;
                    return n("div", {
                        staticClass: "toolbar-container"
                    }, [n("div", {
                        staticClass: "left-toolbar"
                    }, [n("el-button", {
                        attrs: {
                            type: "text",
                            disabled: e.undoDisabled,
                            title: e.i18nt("designer.toolbar.undoHint")
                        },
                        on: {
                            click: e.undoHistory
                        }
                    }, [n("svg-icon", {
                        attrs: {
                            "icon-class": "undo"
                        }
                    })], 1), n("el-button", {
                        attrs: {
                            type: "text",
                            disabled: e.redoDisabled,
                            title: e.i18nt("designer.toolbar.redoHint")
                        },
                        on: {
                            click: e.redoHistory
                        }
                    }, [n("svg-icon", {
                        attrs: {
                            "icon-class": "redo"
                        }
                    })], 1), n("el-button-group", {
                        staticStyle: {
                            "margin-left": "20px"
                        }
                    }, [n("el-button", {
                        attrs: {
                            type: "PC" === e.layoutType ? "info" : ""
                        },
                        on: {
                            click: function(t) {
                                return e.changeLayoutType("PC");
                            }
                        }
                    }, [e._v(" " + e._s(e.i18nt("designer.toolbar.pcLayout")))]), n("el-button", {
                        attrs: {
                            type: "Pad" === e.layoutType ? "info" : ""
                        },
                        on: {
                            click: function(t) {
                                return e.changeLayoutType("Pad");
                            }
                        }
                    }, [e._v(" " + e._s(e.i18nt("designer.toolbar.padLayout")))]), n("el-button", {
                        attrs: {
                            type: "H5" === e.layoutType ? "info" : ""
                        },
                        on: {
                            click: function(t) {
                                return e.changeLayoutType("H5");
                            }
                        }
                    }, [e._v(" " + e._s(e.i18nt("designer.toolbar.mobileLayout")))])], 1), n("el-button", {
                        staticStyle: {
                            "margin-left": "20px"
                        },
                        attrs: {
                            type: "",
                            title: e.i18nt("designer.toolbar.nodeTreeHint")
                        },
                        on: {
                            click: e.showNodeTreeDrawer
                        }
                    }, [n("svg-icon", {
                        attrs: {
                            "icon-class": "node-tree"
                        }
                    })], 1)], 1), n("el-drawer", {
                        staticClass: "node-tree-drawer",
                        attrs: {
                            title: e.i18nt("designer.toolbar.nodeTreeTitle"),
                            direction: "ltr",
                            visible: e.showNodeTreeDrawerFlag,
                            modal: false,
                            size: 280,
                            "destroy-on-close": true
                        },
                        on: {
                            "update:visible": function(t) {
                                e.showNodeTreeDrawerFlag = t;
                            }
                        }
                    }, [n("el-tree", {
                        ref: "nodeTree",
                        staticClass: "node-tree",
                        attrs: {
                            data: e.nodeTreeData,
                            "node-key": "id",
                            "default-expand-all": "",
                            "highlight-current": "",
                            "icon-class": "el-icon-arrow-right"
                        },
                        on: {
                            "node-click": e.onNodeTreeClick
                        }
                    })], 1), n("div", {
                        staticClass: "right-toolbar",
                        style: {
                            width: e.toolbarWidth + "px"
                        }
                    }, [n("div", {
                        staticClass: "right-toolbar-con"
                    }, [e.showToolButton("clearDesignerButton") ? n("el-button", {
                        attrs: {
                            type: "text"
                        },
                        on: {
                            click: e.clearFormWidget
                        }
                    }, [n("i", {
                        staticClass: "el-icon-delete"
                    }), e._v(e._s(e.i18nt("designer.toolbar.clear")))]) : e._e(), e.showToolButton("previewFormButton") ? n("el-button", {
                        attrs: {
                            type: "text"
                        },
                        on: {
                            click: e.previewForm
                        }
                    }, [n("i", {
                        staticClass: "el-icon-view"
                    }), e._v(e._s(e.i18nt("designer.toolbar.preview")))]) : e._e(), e.showToolButton("importJsonButton") ? n("el-button", {
                        attrs: {
                            type: "text"
                        },
                        on: {
                            click: e.importJson
                        }
                    }, [e._v(" " + e._s(e.i18nt("designer.toolbar.importJson")))]) : e._e(), e.showToolButton("exportJsonButton") ? n("el-button", {
                        attrs: {
                            type: "text"
                        },
                        on: {
                            click: e.exportJson
                        }
                    }, [e._v(" " + e._s(e.i18nt("designer.toolbar.exportJson")))]) : e._e(), e.showToolButton("exportCodeButton") ? n("el-button", {
                        attrs: {
                            type: "text"
                        },
                        on: {
                            click: e.exportCode
                        }
                    }, [e._v(" " + e._s(e.i18nt("designer.toolbar.exportCode")))]) : e._e(), e.showToolButton("generateSFCButton") ? n("el-button", {
                        attrs: {
                            type: "text"
                        },
                        on: {
                            click: e.generateSFC
                        }
                    }, [n("svg-icon", {
                        attrs: {
                            "icon-class": "vue-sfc"
                        }
                    }), e._v(e._s(e.i18nt("designer.toolbar.generateSFC")))], 1) : e._e(), e._l(e.$slots, function(t, n) {
                        return [e._t(n)];
                    })], 2)]), e.showPreviewDialogFlag ? n("el-dialog", {
                        directives: [{
                            name: "dialog-drag",
                            rawName: "v-dialog-drag"
                        }],
                        staticClass: "small-padding-dialog",
                        attrs: {
                            title: e.i18nt("designer.toolbar.preview"),
                            visible: e.showPreviewDialogFlag,
                            "show-close": true,
                            "close-on-click-modal": false,
                            "close-on-press-escape": false,
                            center: "",
                            "destroy-on-close": true,
                            "append-to-body": true,
                            width: "75%",
                            fullscreen: "H5" === e.layoutType || "Pad" === e.layoutType
                        },
                        on: {
                            "update:visible": function(t) {
                                e.showPreviewDialogFlag = t;
                            }
                        }
                    }, [n("div", [n("div", {
                        staticClass: "form-render-wrapper",
                        class: ["H5" === e.layoutType ? "h5-layout" : "Pad" === e.layoutType ? "pad-layout" : ""]
                    }, [n("VFormRender", {
                        ref: "preForm",
                        attrs: {
                            "form-json": e.formJson,
                            "form-data": e.testFormData,
                            "preview-state": true,
                            "option-data": e.testOptionData,
                            "global-dsv": e.designerDsv
                        },
                        on: {
                            appendButtonClick: e.testOnAppendButtonClick,
                            buttonClick: e.testOnButtonClick,
                            formChange: e.handleFormChange
                        },
                        scopedSlots: e._u([{
                            key: "curdTable",
                            fn: function(e) {
                                return [n("trump-table", {
                                    attrs: {
                                        field: e.field,
                                        slotProps: e
                                    }
                                })];
                            }
                        }], null, false, 26087027)
                    })], 1)]), n("code-editor", {
                        staticStyle: {
                            display: "none"
                        },
                        model: {
                            value: e.testFunc,
                            callback: function(t) {
                                e.testFunc = t;
                            },
                            expression: "testFunc"
                        }
                    }), n("div", {
                        staticClass: "dialog-footer",
                        attrs: {
                            slot: "footer"
                        },
                        slot: "footer"
                    }, [n("el-button", {
                        attrs: {
                            type: "primary"
                        },
                        on: {
                            click: e.getFormData
                        }
                    }, [e._v(e._s(e.i18nt("designer.hint.getFormData")))]), n("el-button", {
                        attrs: {
                            type: "primary"
                        },
                        on: {
                            click: e.resetForm
                        }
                    }, [e._v(e._s(e.i18nt("designer.hint.resetForm")))]), n("el-button", {
                        attrs: {
                            type: "primary"
                        },
                        on: {
                            click: e.setFormDisabled
                        }
                    }, [e._v(e._s(e.i18nt("designer.hint.disableForm")))]), n("el-button", {
                        attrs: {
                            type: "primary"
                        },
                        on: {
                            click: e.setFormEnabled
                        }
                    }, [e._v(e._s(e.i18nt("designer.hint.enableForm")))]), n("el-button", {
                        attrs: {
                            type: ""
                        },
                        on: {
                            click: function(t) {
                                e.showPreviewDialogFlag = false;
